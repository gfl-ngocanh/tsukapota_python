# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class AnalysisResults(models.Model):
    session_id = models.CharField(max_length=191)
    property_no = models.CharField(max_length=191)
    analysis_result = models.TextField(blank=True, null=True)  # This field type is a guess.
    analysis_result_key = models.CharField(unique=True, max_length=191)
    analysis_status = models.IntegerField()
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'analysis_results'


class Charts(models.Model):
    common_property_no = models.CharField(max_length=191)
    property_no = models.CharField(max_length=191)
    property_type = models.CharField(max_length=191, blank=True, null=True)
    location = models.CharField(max_length=191, blank=True, null=True)
    price = models.FloatField()
    floor_plan = models.CharField(max_length=191, blank=True, null=True)
    price_property = models.FloatField()
    price_min = models.FloatField()
    price_max = models.FloatField()
    age = models.FloatField()
    closeness = models.FloatField()
    size = models.FloatField()
    convenient = models.FloatField()
    security = models.FloatField()
    comfortable = models.FloatField()
    age_max = models.FloatField()
    age_min = models.FloatField()
    age_mid = models.FloatField()
    minutes_on_foot_max = models.FloatField()
    minutes_on_foot_min = models.FloatField()
    minutes_on_foot_mid = models.FloatField()
    square_meter_max = models.FloatField()
    square_meter_min = models.FloatField()
    square_meter_mid = models.FloatField()
    convenient_eval_max = models.FloatField()
    convenient_eval_min = models.FloatField()
    convenient_eval_mid = models.FloatField()
    security_eval_max = models.FloatField()
    security_eval_min = models.FloatField()
    security_eval_mid = models.FloatField()
    comfortable_eval_max = models.FloatField()
    comfortable_eval_min = models.FloatField()
    comfortable_eval_mid = models.FloatField()
    filtered_properties = models.FloatField()
    filtered_age = models.FloatField()
    filtered_minutes = models.FloatField()
    filtered_square = models.FloatField()
    filtered_convenient = models.FloatField()
    filtered_security = models.FloatField()
    filtered_comfortable = models.FloatField()
    filtered_standard_age = models.FloatField()
    filtered_standard_minutes = models.FloatField()
    filtered_standard_square = models.FloatField()
    filtered_standard_convenient = models.FloatField()
    filtered_standard_security = models.FloatField()
    filtered_standard_comfortable = models.FloatField()
    total_spec_points_age = models.FloatField()
    total_spec_points_closeness = models.FloatField()
    total_spec_points_size = models.FloatField()
    total_spec_points_convenient = models.FloatField()
    total_spec_points_security = models.FloatField()
    total_spec_points_comfortable = models.FloatField()
    property_url = models.TextField(blank=True, null=True)
    phone = models.CharField(max_length=191, blank=True, null=True)
    registered = models.CharField(max_length=191, blank=True, null=True)
    updated = models.CharField(max_length=191, blank=True, null=True)
    pb_age_property = models.FloatField()
    pb_minutes_on_foot_property = models.FloatField()
    pb_square_meter_property = models.FloatField()
    pb_convenient_evaluation_value_property = models.FloatField()
    pb_security_evaluation_value_property = models.FloatField()
    pb_comfortable_evaluation_value_property = models.FloatField()
    request_for_property_information = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'charts'


class ErrorInformations(models.Model):
    reason_error = models.CharField(max_length=191)
    common_property_no = models.CharField(max_length=191)
    site_id = models.CharField(max_length=191)
    property_id = models.CharField(max_length=191)
    property_type = models.CharField(max_length=191)
    property_name = models.CharField(max_length=191)
    address_1 = models.CharField(max_length=191, blank=True, null=True)
    address_2 = models.CharField(max_length=191, blank=True, null=True)
    address_3 = models.CharField(max_length=191, blank=True, null=True)
    price_1 = models.FloatField()
    price_2 = models.FloatField()
    property_size_1 = models.FloatField()
    property_size_2 = models.FloatField()
    floor_size_1 = models.FloatField()
    floor_size_2 = models.FloatField()
    floor_plan = models.CharField(max_length=191, blank=True, null=True)
    train_subway_line_1 = models.CharField(max_length=191, blank=True, null=True)
    train_subway_station_1 = models.CharField(max_length=191, blank=True, null=True)
    walking_minutes_from_station_1 = models.FloatField()
    walking_distance_from_the_station_1 = models.FloatField()
    minutes_from_the_station_by_bus_1 = models.FloatField()
    walking_minutes_from_bus_stop_1 = models.FloatField()
    train_subway_line_2 = models.CharField(max_length=191, blank=True, null=True)
    train_subway_station_2 = models.CharField(max_length=191, blank=True, null=True)
    walking_minutes_from_the_station_2 = models.FloatField()
    walking_distance_from_the_station_2 = models.FloatField()
    minutes_from_the_station_by_bus_2 = models.FloatField()
    walking_minutes_from_bus_stop_2 = models.FloatField()
    train_subway_line_3 = models.CharField(max_length=191, blank=True, null=True)
    train_subway_station_3 = models.CharField(max_length=191, blank=True, null=True)
    walking_minutes_from_the_station_3 = models.FloatField()
    walking_distance_from_the_station_3 = models.FloatField()
    minutes_from_the_station_by_bus_3 = models.FloatField()
    walking_minutes_from_bus_stop_3 = models.FloatField()
    year_month_built = models.CharField(max_length=191, blank=True, null=True)
    building_structure = models.CharField(max_length=191, blank=True, null=True)
    building_size = models.CharField(max_length=191, blank=True, null=True)
    floor_number = models.CharField(max_length=191, blank=True, null=True)
    room_number = models.CharField(max_length=191, blank=True, null=True)
    land_rights = models.CharField(max_length=191, blank=True, null=True)
    total_units = models.FloatField()
    owner_1 = models.CharField(max_length=191, blank=True, null=True)
    owner_2 = models.CharField(max_length=191, blank=True, null=True)
    contractor_1 = models.CharField(max_length=191, blank=True, null=True)
    contractor_2 = models.CharField(max_length=191, blank=True, null=True)
    latitude = models.CharField(max_length=191, blank=True, null=True)
    longitude = models.CharField(max_length=191, blank=True, null=True)
    walking_minutes_from_the_station_99 = models.FloatField()
    comments = models.TextField(blank=True, null=True)
    the_area_occupied_30_tsubo_or_more = models.IntegerField()
    the_area_occupied_25_tsubo_or_more = models.IntegerField()
    two_family_houses = models.IntegerField()
    annex = models.IntegerField()
    ldk25_tatami_more = models.IntegerField()
    ldk20_tatami_more = models.IntegerField()
    ldk18_tatami_more = models.IntegerField()
    ldk15_tatami_more = models.IntegerField()
    ldk12_tatami_more = models.IntegerField()
    ldk2_places = models.IntegerField()
    the_second_floor_ldk = models.IntegerField()
    the_second_floor_living_room = models.IntegerField()
    stairs_set_inside_the_living_room = models.IntegerField()
    indoor_spiral_staircase = models.IntegerField()
    double_height_ceiling = models.IntegerField()
    double_height = models.IntegerField()
    out_pole_method = models.IntegerField()
    skeleton_infill = models.IntegerField()
    split_level_home = models.IntegerField()
    ceiling_height_of_at_least_3m = models.IntegerField()
    ceiling_height_of_at_least_2m7 = models.IntegerField()
    ceiling_height_of_at_least_2m5 = models.IntegerField()
    reverse_beam_method = models.IntegerField()
    folding_on_the_ceiling = models.IntegerField()
    gradient_ceiling = models.IntegerField()
    skylight = models.IntegerField()
    maisonette = models.IntegerField()
    loft = models.IntegerField()
    grenier = models.IntegerField()
    sunroom = models.IntegerField()
    all_rooms_are_as_big_as_8_tatami_mats_or_more = models.IntegerField()
    all_rooms_are_as_big_as_6_tatami_mats_or_more = models.IntegerField()
    bedroom_is_larger_than_10_or_more_tatami_mats = models.IntegerField()
    bedroom_is_larger_than_8_or_more_tatami_mats = models.IntegerField()
    japanese_style_room_is_as_large_as_8_or_more_tatami_mats = models.IntegerField()
    kitchen_is_as_large_as_5_or_more_mats = models.IntegerField()
    island_style_kitchen = models.IntegerField()
    open_style_kitchen = models.IntegerField()
    bath_tub_size_1_tsubo_or_more = models.IntegerField()
    garden_50_tsubo = models.IntegerField()
    garden_30_tsubo = models.IntegerField()
    garden_10_tsubo = models.IntegerField()
    study = models.IntegerField()
    light_coat = models.IntegerField()
    patio = models.IntegerField()
    inner_balcony = models.IntegerField()
    tsuboniwa = models.IntegerField()
    courtyard = models.IntegerField()
    wood_terrace = models.IntegerField()
    wood_deck = models.IntegerField()
    roof_balcony = models.IntegerField()
    rooftop_terrace = models.IntegerField()
    rooftop_garden = models.IntegerField()
    rooftop = models.IntegerField()
    terrace = models.IntegerField()
    parking_3_cars = models.IntegerField()
    parking_2_cars = models.IntegerField()
    private_garden = models.IntegerField()
    garden = models.IntegerField()
    home_garden = models.IntegerField()
    field = models.IntegerField()
    wide_balcony = models.IntegerField()
    there_is_a_water_faucet_on_the_balcony_rooftop = models.IntegerField()
    three_sided_balcony = models.IntegerField()
    l_shaped_balcony = models.IntegerField()
    two_way_balcony = models.IntegerField()
    double_sided_balcony = models.IntegerField()
    veranda = models.IntegerField()
    a_movable_partition = models.IntegerField()
    two_door_one_room = models.IntegerField()
    floor_plan_can_be_changed = models.IntegerField()
    customizable = models.IntegerField()
    diy_allowed = models.IntegerField()
    bungalow = models.IntegerField()
    frontage_10m_or_wider = models.IntegerField()
    frontage_8m_or_wider = models.IntegerField()
    expansive_dwelling_exterior = models.IntegerField()
    three_direction_dwelling_units = models.IntegerField()
    one_floor_one_dwelling_unit = models.IntegerField()
    corner_room_four_direction = models.IntegerField()
    corner_room = models.IntegerField()
    basement_room = models.IntegerField()
    utility_room = models.IntegerField()
    free_space = models.IntegerField()
    wall_bed = models.IntegerField()
    stockyards = models.IntegerField()
    storage_room = models.IntegerField()
    storeroom = models.IntegerField()
    attic_storage = models.IntegerField()
    walk_in_closet_2_places = models.IntegerField()
    walk_through_closet = models.IntegerField()
    closet_3_places = models.IntegerField()
    closet_2_places = models.IntegerField()
    walk_in_closet = models.IntegerField()
    closet = models.IntegerField()
    storage_more_than_2kan5 = models.IntegerField()
    storage_more_tha_2kan = models.IntegerField()
    storage_more_tha_1kan5 = models.IntegerField()
    under_stairs_storage = models.IntegerField()
    hanging_cupboard = models.IntegerField()
    under_floor_storage = models.IntegerField()
    closet_1 = models.IntegerField()
    built_within_2_years = models.IntegerField()
    built_within_3_years = models.IntegerField()
    built_within_5_years = models.IntegerField()
    number_24_hour_emergency_call_system = models.IntegerField(db_column='24_hour_emergency_call_system')  # Field renamed because it wasn't a valid Python identifier.
    airtight_housing = models.IntegerField()
    ventilation_heat_insulation_wb_method = models.IntegerField()
    ev_car_charging_equipment = models.IntegerField()
    smart_house = models.IntegerField()
    low_carbon_housing = models.IntegerField()
    photocatalytic_coating = models.IntegerField()
    sick_house_syndrome_prevention = models.IntegerField()
    non_formaldehyde = models.IntegerField()
    long_term_high_quality_housing = models.IntegerField()
    i100_year_service_life_of_concrete = models.IntegerField()
    high_strength_concrete = models.IntegerField()
    leading_house_builders_and_construction = models.IntegerField()
    order_home_builders_and_construction = models.IntegerField()
    construction_and_renovation_design_books = models.IntegerField()
    earthquake_resistance_standards_certificate = models.IntegerField()
    pre_inspection = models.IntegerField()
    defects_insurance_the_ministry_specified = models.IntegerField()
    defect_liability_real_estate_company_own = models.IntegerField()
    defects_insurance_inspection_compliance_with_standards = models.IntegerField()
    defects_insurance_the_ministry_specified_warranty_available = models.IntegerField()
    equipment_guaranteed = models.IntegerField()
    high_quality_rental_housing = models.IntegerField()
    crime_prevention_wquipped_apartment = models.IntegerField()
    fingerprint_authentication = models.IntegerField()
    vein_authentication = models.IntegerField()
    non_contact_type_ic_card_key = models.IntegerField()
    electronic_lock_system = models.IntegerField()
    entrance_remote_control_key = models.IntegerField()
    electronic_key = models.IntegerField()
    electronic_lock = models.IntegerField()
    key_card = models.IntegerField()
    heat_exchange_centralized_ventilation_system = models.IntegerField()
    number_24_hour_ventilation_system = models.IntegerField(db_column='24_hour_ventilation_system')  # Field renamed because it wasn't a valid Python identifier.
    passive_ventilation = models.IntegerField()
    solar_power_system = models.IntegerField()
    seismic_isolation_structure = models.IntegerField()
    seismic_control_structure = models.IntegerField()
    seismic_structure = models.IntegerField()
    eco_point_target_housing = models.IntegerField()
    energy_efficiency_rating = models.IntegerField()
    bels_energy_saving_standard_fit = models.IntegerField()
    renovation_council_approved = models.IntegerField()
    renovation = models.IntegerField()
    kitchen_unused = models.IntegerField()
    bathroom_unused = models.IntegerField()
    interior_and_exterior_renovation_already = models.IntegerField()
    exterior_renovation_already = models.IntegerField()
    interior_renovation_already = models.IntegerField()
    flooring_renewed = models.IntegerField()
    tatami_renewed = models.IntegerField()
    wallpaper_renewed = models.IntegerField()
    imported_kitchen = models.IntegerField()
    system_kitchen = models.IntegerField()
    glass_top_stove = models.IntegerField()
    kitchen_floor_heating = models.IntegerField()
    designers_property = models.IntegerField()
    imported_housing = models.IntegerField()
    exterior_concrete = models.IntegerField()
    interior_concrete = models.IntegerField()
    exterior_tiled = models.IntegerField()
    bathroom_tv = models.IntegerField()
    bathroom_audio = models.IntegerField()
    whirlpool = models.IntegerField()
    automatic_bath_heating_system = models.IntegerField()
    bathroom_heating = models.IntegerField()
    moisture_proof_ventilation_fan = models.IntegerField()
    all_electric_system = models.IntegerField()
    ih_cooking_stove = models.IntegerField()
    energy_saving_water_heaters = models.IntegerField()
    ecocute_heating_system = models.IntegerField()
    ecojo_z_heating_system = models.IntegerField()
    ecowill_heating_system = models.IntegerField()
    automatic_lighting_system = models.IntegerField()
    multi_media_outlet = models.IntegerField()
    hikari_internet_installed = models.IntegerField()
    station_nearby = models.IntegerField()
    within_a_5minute_walk_from_the_station = models.IntegerField()
    within_a_10minute_walk_from_the_station = models.IntegerField()
    easy_access_to_the_station = models.IntegerField()
    flat_ground = models.IntegerField()
    starting_station = models.IntegerField()
    express_stop_station = models.IntegerField()
    access_to_3_or_more_train_subway_lines = models.IntegerField()
    access_to_2_train_subway_lines = models.IntegerField()
    three_stations_accessible = models.IntegerField()
    two_stations_accessble = models.IntegerField()
    within_1_minute_walk_from_the_bus_stop = models.IntegerField()
    within_3_minute_walk_from_the_bus_stop = models.IntegerField()
    easy_access_to_the_city = models.IntegerField()
    suburban = models.IntegerField()
    carpark_with_remote_control_shutter = models.IntegerField()
    underground_carpark = models.IntegerField()
    indoor_parking = models.IntegerField()
    parking_shutter = models.IntegerField()
    paved_carpark = models.IntegerField()
    outdoor_parking = models.IntegerField()
    ground_level_carpark = models.IntegerField()
    flat_parking = models.IntegerField()
    high_roof_car_park_available = models.IntegerField()
    large_car_allowed_parking = models.IntegerField()
    flat_35_certificate = models.IntegerField()
    corresponding_to_the_flat_35s = models.IntegerField()
    design_evaluation_by_hyoukkakyoukai = models.IntegerField()
    construction_evaluation_by_hyoukakyoukai = models.IntegerField()
    number_2x4_method = models.IntegerField(db_column='2x4_method')  # Field renamed because it wasn't a valid Python identifier.
    number_2x6_method = models.IntegerField(db_column='2x6_method')  # Field renamed because it wasn't a valid Python identifier.
    housing_performance_warranty = models.IntegerField()
    equipment_warranty_division_available = models.IntegerField()
    fireproof_structure = models.IntegerField()
    semi_fireproof_structure = models.IntegerField()
    simple_fireproof_structure = models.IntegerField()
    formaldehyde_prevention = models.IntegerField()
    security_strengthening_region = models.IntegerField()
    concierge_service = models.IntegerField()
    reception_services = models.IntegerField()
    manager_on_duty_for_24_hours = models.IntegerField()
    on_sight_security_officer = models.IntegerField()
    a_live_in_property_manager = models.IntegerField()
    moderator_patrol = models.IntegerField()
    moderator_day_shift = models.IntegerField()
    number_24_hour_security = models.IntegerField(db_column='24_hour_security')  # Field renamed because it wasn't a valid Python identifier.
    security_system = models.IntegerField()
    contracted_with_security_company = models.IntegerField()
    security_enhancement = models.IntegerField()
    double_floor_double_ceiling = models.IntegerField()
    double_ceiling_structure = models.IntegerField()
    soundproofed = models.IntegerField()
    soundproof_sash = models.IntegerField()
    one_floor_two_dwelling_units = models.IntegerField()
    corner_lot = models.IntegerField()
    no_building_on_the_frontside = models.IntegerField()
    adjacent_building_distance_2m_or_more = models.IntegerField()
    connected_road_width_of_6m_or_wider = models.IntegerField()
    monitor_with_intercom = models.IntegerField()
    auto_lock_with_monitor = models.IntegerField()
    auto_lock = models.IntegerField()
    ten_key_lock = models.IntegerField()
    dimple_key = models.IntegerField()
    security_glass = models.IntegerField()
    double_glazing = models.IntegerField()
    electric_shutter = models.IntegerField()
    security_shutters = models.IntegerField()
    shutter = models.IntegerField()
    large_scale_properties = models.IntegerField()
    in_a_large_scale_developped_area = models.IntegerField()
    owner_dwelling_located_in_the_same_building = models.IntegerField()
    owners_residence_nearby = models.IntegerField()
    musical_instruments_allowed = models.IntegerField()
    musical_instruments_consultation = models.IntegerField()
    resort_location = models.IntegerField()
    summer_resort = models.IntegerField()
    all_rooms_face_the_southband = models.IntegerField()
    all_rooms_face_southwest_direction = models.IntegerField()
    all_rooms_face_southeast_direction = models.IntegerField()
    facing_southband = models.IntegerField()
    located_in_tired_property_lot_faceing_southband = models.IntegerField()
    southwest_corner_room = models.IntegerField()
    facing_with_southside_road = models.IntegerField()
    southeast_corner_room = models.IntegerField()
    southside_4_rooms = models.IntegerField()
    southside_3_rooms = models.IntegerField()
    southside_2_rooms = models.IntegerField()
    southside_balcony = models.IntegerField()
    south_side_living = models.IntegerField()
    garden_on_the_southside = models.IntegerField()
    three_demention_lighting = models.IntegerField()
    all_rooms_are_two_sided_lighting = models.IntegerField()
    two_face_lighting = models.IntegerField()
    exellent_lightning = models.IntegerField()
    window_equipped_in_the_kitchen = models.IntegerField()
    window_qeuipped_in_the_bathroom = models.IntegerField()
    window_equipped_in_the_bathroom = models.IntegerField()
    airtight_high_insulated_houses = models.IntegerField()
    high_insulated_houses = models.IntegerField()
    external_insulation = models.IntegerField()
    under_floor_ventilation = models.IntegerField()
    central_heating = models.IntegerField()
    all_rooms_are_air_conditioned = models.IntegerField()
    built_in_air_conditioning = models.IntegerField()
    number_4_air_conditioning_or_more = models.IntegerField(db_column='4_air_conditioning_or_more')  # Field renamed because it wasn't a valid Python identifier.
    number_3_air_conditioning = models.IntegerField(db_column='3_air_conditioning')  # Field renamed because it wasn't a valid Python identifier.
    number_2_air_conditioning = models.IntegerField(db_column='2_air_conditioning')  # Field renamed because it wasn't a valid Python identifier.
    each_room_installed_with_individual_air_conditioning = models.IntegerField()
    air_conditioning = models.IntegerField()
    air_conditioner = models.IntegerField()
    ff_heating = models.IntegerField()
    kerosene_ff_heating = models.IntegerField()
    gas_ff_heating = models.IntegerField()
    regenerative_floor_heating = models.IntegerField()
    floor_heating = models.IntegerField()
    hot_water_heater = models.IntegerField()
    fan_convector_heating = models.IntegerField()
    regenerative_heating = models.IntegerField()
    gas_heating = models.IntegerField()
    oil_heating = models.IntegerField()
    kitchen_feet_warm_air_fan = models.IntegerField()
    bathroom_floor_heating = models.IntegerField()
    activated_carbon_installed = models.IntegerField()
    diatomaceous_earth_wall_paint = models.IntegerField()
    solid_wood_flooring = models.IntegerField()
    natural_materials = models.IntegerField()
    sauna = models.IntegerField()
    mist_sauna = models.IntegerField()
    japanese_cypress_bath = models.IntegerField()
    open_air_bath = models.IntegerField()
    with_hot_spring = models.IntegerField()
    rights_to_use_the_onsen = models.IntegerField()
    allowed_to_use_the_onsen = models.IntegerField()
    kitchen_with_a_counter = models.IntegerField()
    open_to_living_or_dining_kitchen = models.IntegerField()
    downlight = models.IntegerField()
    indirect_lightning = models.IntegerField()
    with_blind = models.IntegerField()
    with_the_roll_screen = models.IntegerField()
    partial_flooring = models.IntegerField()
    only_western_style_rooms = models.IntegerField()
    floor_tiles_with_flooring_style = models.IntegerField()
    garbage_collection_services = models.IntegerField()
    allowed_to_access_to_the_garbage_point_24hours = models.IntegerField()
    garbage_yard = models.IntegerField()
    on_site_waste_yard = models.IntegerField()
    cleaning_box = models.IntegerField()
    coin_laundry = models.IntegerField()
    lift_wall_storage = models.IntegerField()
    shoes_closet = models.IntegerField()
    shoes_cupboads = models.IntegerField()
    ceiling_height_shoe_closet = models.IntegerField()
    pantry = models.IntegerField()
    equipping_cupboard = models.IntegerField()
    number_3ways_kitchen = models.IntegerField(db_column='3ways_kitchen')  # Field renamed because it wasn't a valid Python identifier.
    number_2ways_kitchen = models.IntegerField(db_column='2ways_kitchen')  # Field renamed because it wasn't a valid Python identifier.
    u_shaped_kitchen = models.IntegerField()
    l_shaped_kitchen = models.IntegerField()
    two_rows_style_kitchen = models.IntegerField()
    one_row_stule_kitchen = models.IntegerField()
    independent_kitchen = models.IntegerField()
    four_or_more_burners_on_the_stove = models.IntegerField()
    three_burners_on_the_stove = models.IntegerField()
    two_burners_on_the_stove = models.IntegerField()
    one_burner_on_the_stove = models.IntegerField()
    with_gas_stove = models.IntegerField()
    already_stove_installed = models.IntegerField()
    gas_stove_allowed = models.IntegerField()
    grill = models.IntegerField()
    microwave_oven = models.IntegerField()
    gas_oven = models.IntegerField()
    gas_stove = models.IntegerField()
    two_way_washroom = models.IntegerField()
    three_way_washroom = models.IntegerField()
    toilet_3_places = models.IntegerField()
    toilet_2_places = models.IntegerField()
    high_function_toilet = models.IntegerField()
    washing_stand_deep_style = models.IntegerField()
    large_washing_stand = models.IntegerField()
    washing_stand_with_three_sided_mirror = models.IntegerField()
    washing_stand_with_vertical_lighting = models.IntegerField()
    gym = models.IntegerField()
    exercise_machine_room = models.IntegerField()
    public_bath = models.IntegerField()
    shared_bathroom = models.IntegerField()
    nursery = models.IntegerField()
    childrens_room = models.IntegerField()
    slop_sink = models.IntegerField()
    exclusive_network_line_for_internet = models.IntegerField()
    cable_broadcast = models.IntegerField()
    wireless_lan = models.IntegerField()
    lan = models.IntegerField()
    catv = models.IntegerField()
    bs = models.IntegerField()
    cs = models.IntegerField()
    furnished = models.IntegerField()
    with_dining_table = models.IntegerField()
    set_up_bed = models.IntegerField()
    with_curtain = models.IntegerField()
    all_rooms_with_lighting = models.IntegerField()
    lighting_equipment = models.IntegerField()
    each_room_lighting = models.IntegerField()
    tv_set = models.IntegerField()
    with_home_appliances = models.IntegerField()
    microwave = models.IntegerField()
    refrigerator = models.IntegerField()
    washing_machine = models.IntegerField()
    dishwasher_dryer = models.IntegerField()
    dishwasher = models.IntegerField()
    dish_dryer = models.IntegerField()
    electric_cooker = models.IntegerField()
    electric_stove = models.IntegerField()
    clothes_dryer = models.IntegerField()
    washing_and_drying_machine = models.IntegerField()
    bathroom_dryer = models.IntegerField()
    indoor_laundry_pole = models.IntegerField()
    outdoor_laundry = models.IntegerField()
    indoor_washing_machine_installation_place = models.IntegerField()
    adjacent_japanese_style_room = models.IntegerField()
    japanese_style_adjacent_room = models.IntegerField()
    japanese_style_room = models.IntegerField()
    snow_melting_equipment = models.IntegerField()
    snow_melting_tank = models.IntegerField()
    porte_cochere = models.IntegerField()
    driveway_space = models.IntegerField()
    close_to_the_super_market = models.IntegerField()
    two_elevators = models.IntegerField()
    home_delivery_box = models.IntegerField()
    each_room_secure_access_without_tresspassing = models.IntegerField()
    back_entrance = models.IntegerField()
    parking_for_visitors = models.IntegerField()
    all_rooms_are_equipped_with_storage = models.IntegerField()
    disposer = models.IntegerField()
    water_filter = models.IntegerField()
    tire_yard = models.IntegerField()
    wash_basin_set_on_the_second_floor = models.IntegerField()
    modular_bathroom = models.IntegerField()
    reheating_bath_system = models.IntegerField()
    separate_bathroom = models.IntegerField()
    kitchen_2_places = models.IntegerField()
    double_wash_bowl = models.IntegerField()
    two_toilets = models.IntegerField()
    walk_in_type_shoe_closet = models.IntegerField()
    independent_bathroom_independent_toilet = models.IntegerField()
    home_elevator = models.IntegerField()
    multi_function_shower = models.IntegerField()
    double_door_with_two_different_size = models.IntegerField()
    theater_room = models.IntegerField()
    guest_rooms = models.IntegerField()
    party_room_for_common_use = models.IntegerField()
    rental_meeting_room = models.IntegerField()
    housing_with_office_space = models.IntegerField()
    meeting_room = models.IntegerField()
    on_site_play_ground = models.IntegerField()
    rental_video = models.IntegerField()
    melting_snow_device_for_sideway_road = models.IntegerField()
    outdoor_power_strip = models.IntegerField()
    storage_place_above_the_closet = models.IntegerField()
    wash_room_with_storage = models.IntegerField()
    entrance_storage = models.IntegerField()
    ventilation_good = models.IntegerField()
    ocean_view = models.IntegerField()
    near_the_beach = models.IntegerField()
    riverside = models.IntegerField()
    lake_pond_view = models.IntegerField()
    fireworks_view = models.IntegerField()
    high_rise_property = models.IntegerField()
    top_floor = models.IntegerField()
    upper_floors = models.IntegerField()
    excellent_view = models.IntegerField()
    rich_in_nature_residential_area = models.IntegerField()
    a_quiet_and_peaceful_residential_area = models.IntegerField()
    mountain_view = models.IntegerField()
    scenic_zone = models.IntegerField()
    wire_buried = models.IntegerField()
    low_rise_exclusive_residential_area = models.IntegerField()
    easy_access_to_the_public_park = models.IntegerField()
    on_site_park = models.IntegerField()
    a_region_having_many_educational_institutions = models.IntegerField()
    located_on_a_high_ground = models.IntegerField()
    countryside = models.IntegerField()
    vertically_long_window = models.IntegerField()
    fewer_traffic = models.IntegerField()
    fireplace = models.IntegerField()
    ceiling_fan = models.IntegerField()
    community_open_air_bath = models.IntegerField()
    swimming_pool = models.IntegerField()
    carpeted_floor = models.IntegerField()
    low_table_with_heater_set_on_the_hole = models.IntegerField()
    hearth = models.IntegerField()
    bay_window = models.IntegerField()
    alcove = models.IntegerField()
    tatami_corner = models.IntegerField()
    tearoom = models.IntegerField()
    old_house_style = models.IntegerField()
    log_cabin = models.IntegerField()
    old_city_style_house = models.IntegerField()
    sukiyazukuri = models.IntegerField()
    ryukyu_tatami = models.IntegerField()
    iriomoya_style_roof_top = models.IntegerField()
    shoin_zukuri = models.IntegerField()
    all_rooms_flooring = models.IntegerField()
    building_confirmation_completion_inspected_certificate = models.IntegerField()
    architect_building_inspection_report = models.IntegerField()
    repair_and_inspection_records = models.IntegerField()
    seismic_reinforcement_work_already = models.IntegerField()
    seismic_door = models.IntegerField()
    law_compliance_investigation_report = models.IntegerField()
    wind_resistant_structure = models.IntegerField()
    pre_ground_survey = models.IntegerField()
    uninterruptible_power_system = models.IntegerField()
    mainstay = models.IntegerField()
    yonsunn_12cmx12cm_pillar = models.IntegerField()
    hokkaido_style_housing = models.IntegerField()
    no_falling_snow_building = models.IntegerField()
    double_lock_key = models.IntegerField()
    surveillance_camera = models.IntegerField()
    no_housing_units_on_downstairs = models.IntegerField()
    no_housing_units_on_above = models.IntegerField()
    vinyl_flooring = models.IntegerField()
    human_light_sensor = models.IntegerField()
    seismic_latch_hanging_cupboard = models.IntegerField()
    alcove_1 = models.IntegerField()
    less_barrier_interior_housing = models.IntegerField()
    floor_without_step = models.IntegerField()
    with_elevator_stairs = models.IntegerField()
    entrance_handrail = models.IntegerField()
    foot_lights = models.IntegerField()
    with_aed = models.IntegerField()
    low_rise_apartment = models.IntegerField()
    within_10_minutes_walk_from_hospital = models.IntegerField()
    water_saving_toilet = models.IntegerField()
    energy_saving_measures = models.IntegerField()
    shuttle_bus = models.IntegerField()
    multiple_bus_routes = models.IntegerField()
    i100yen_bus_routes = models.IntegerField()
    along_with_the_streetcar_route = models.IntegerField()
    bicycle_parking = models.IntegerField()
    bike_shelter = models.IntegerField()
    warehouse = models.IntegerField()
    warehouse_1 = models.IntegerField()
    shower_room = models.IntegerField()
    instant_water_heater = models.IntegerField()
    leash_hook = models.IntegerField()
    multiple_common_facilities = models.IntegerField()
    maintained_sidewalk = models.IntegerField()
    dirt_floor = models.IntegerField()
    well = models.IntegerField()
    windbreak_room = models.IntegerField()
    free_catv = models.IntegerField()
    free_internet_access = models.IntegerField()
    picture_rails = models.IntegerField()
    pet_doorway = models.IntegerField()
    one_of_the_developped_property = models.IntegerField()
    office_use_allowed = models.IntegerField()
    pet_toilet = models.IntegerField()
    pets_foot_shower = models.IntegerField()
    powder_room = models.IntegerField()
    golf_course_near_by = models.IntegerField()
    ski_resorts_near_by = models.IntegerField()
    tennis_courts_near_by = models.IntegerField()
    within_10_minutes_walk_from_the_elementary_school = models.IntegerField()
    heating = models.IntegerField()
    wooden_floor = models.IntegerField()
    suited_for_soho = models.IntegerField()
    owners_residence = models.IntegerField()
    small_dogs_accepted = models.IntegerField()
    share_house = models.IntegerField()
    the_first_floor_on_stilts = models.IntegerField()
    three_pr_more_story_above = models.IntegerField()
    single_water_heating_system = models.IntegerField()
    it_jyusetsu_corresponding_property = models.IntegerField()
    two_story = models.IntegerField()
    trunk_room = models.IntegerField()
    cats_allowed = models.IntegerField()
    large_dogs_accepted = models.IntegerField()
    pets_negotiable = models.IntegerField()
    pet_friendly = models.IntegerField()
    pets_not_allowed = models.IntegerField()
    eateries_allowed = models.IntegerField()
    restaurants_not_allowed = models.IntegerField()
    musical_instruments_prohibited = models.IntegerField()
    parttime_building_manager = models.IntegerField()
    land_readjustment_area = models.IntegerField()
    listedn_on_vacant_real_estate_listings = models.IntegerField()
    no_resturuction_of_constructer_builder_selection = models.IntegerField()
    building_restricted_lot = models.IntegerField()
    high_temperature_water_heating_system_bath = models.IntegerField()
    stilts_platform = models.IntegerField()
    spandrel_wall = models.IntegerField()
    reconstruction_prohibited_lot = models.IntegerField()
    office_not_allowed = models.IntegerField()
    landlot_for_apartment_construction = models.IntegerField()
    shaping_land = models.IntegerField()
    gutter = models.IntegerField()
    house_with_store = models.IntegerField()
    staircase = models.IntegerField()
    housing_lot_for_sale = models.IntegerField()
    other_1 = models.CharField(max_length=191, blank=True, null=True)
    other_2 = models.CharField(max_length=191, blank=True, null=True)
    other_3 = models.CharField(max_length=191, blank=True, null=True)
    other_4 = models.CharField(max_length=191, blank=True, null=True)
    other_5 = models.CharField(max_length=191, blank=True, null=True)
    property_details_url = models.TextField(blank=True, null=True)
    request_for_property_information = models.TextField(blank=True, null=True)
    contact_phone_number = models.CharField(max_length=191, blank=True, null=True)
    date_of_registration = models.CharField(max_length=191, blank=True, null=True)
    date_of_renewing_registeration = models.CharField(max_length=191, blank=True, null=True)
    sales_category = models.CharField(max_length=191, blank=True, null=True)
    property_category = models.CharField(max_length=191, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'error_informations'


class FilteredProps2(models.Model):
    common_property_no_infomation = models.CharField(db_column='common_property_no@infomation', max_length=191)  # Field renamed to remove unsuitable characters.
    property_no_infomation = models.CharField(db_column='property_no@infomation', max_length=191)  # Field renamed to remove unsuitable characters.
    common_property_no = models.CharField(max_length=191)
    site_id = models.CharField(max_length=191)
    property_id = models.CharField(max_length=191)
    property_type = models.CharField(max_length=191)
    property_name = models.CharField(max_length=191)
    address_1 = models.CharField(max_length=191, blank=True, null=True)
    address_2 = models.CharField(max_length=191, blank=True, null=True)
    address_3 = models.CharField(max_length=191, blank=True, null=True)
    price_1 = models.FloatField()
    price_2 = models.FloatField()
    property_size_1 = models.FloatField()
    property_size_2 = models.FloatField()
    floor_size_1 = models.FloatField()
    floor_size_2 = models.FloatField()
    floor_plan = models.CharField(max_length=191, blank=True, null=True)
    train_subway_line_1 = models.CharField(max_length=191, blank=True, null=True)
    train_subway_station_1 = models.CharField(max_length=191, blank=True, null=True)
    walking_minutes_from_station_1 = models.FloatField()
    walking_distance_from_the_station_1 = models.FloatField()
    minutes_from_the_station_by_bus_1 = models.FloatField()
    walking_minutes_from_bus_stop_1 = models.FloatField()
    train_subway_line_2 = models.CharField(max_length=191, blank=True, null=True)
    train_subway_station_2 = models.CharField(max_length=191, blank=True, null=True)
    walking_minutes_from_the_station_2 = models.FloatField()
    walking_distance_from_the_station_2 = models.FloatField()
    minutes_from_the_station_by_bus_2 = models.FloatField()
    walking_minutes_from_bus_stop_2 = models.FloatField()
    train_subway_line_3 = models.CharField(max_length=191, blank=True, null=True)
    train_subway_station_3 = models.CharField(max_length=191, blank=True, null=True)
    walking_minutes_from_the_station_3 = models.FloatField()
    walking_distance_from_the_station_3 = models.FloatField()
    minutes_from_the_station_by_bus_3 = models.FloatField()
    walking_minutes_from_bus_stop_3 = models.FloatField()
    year_month_built = models.CharField(max_length=191, blank=True, null=True)
    building_structure = models.CharField(max_length=191, blank=True, null=True)
    building_size = models.CharField(max_length=191, blank=True, null=True)
    floor_number = models.CharField(max_length=191, blank=True, null=True)
    room_number = models.CharField(max_length=191, blank=True, null=True)
    land_rights = models.CharField(max_length=191, blank=True, null=True)
    total_units = models.FloatField()
    owner_1 = models.CharField(max_length=191, blank=True, null=True)
    owner_2 = models.CharField(max_length=191, blank=True, null=True)
    contractor_1 = models.CharField(max_length=191, blank=True, null=True)
    contractor_2 = models.CharField(max_length=191, blank=True, null=True)
    latitude = models.CharField(max_length=191, blank=True, null=True)
    longitude = models.CharField(max_length=191, blank=True, null=True)
    walking_minutes_from_the_station_99 = models.FloatField()
    comments = models.TextField(blank=True, null=True)
    the_area_occupied_30_tsubo_or_more = models.IntegerField()
    the_area_occupied_25_tsubo_or_more = models.IntegerField()
    two_family_houses = models.IntegerField()
    annex = models.IntegerField()
    ldk25_tatami_more = models.IntegerField()
    ldk20_tatami_more = models.IntegerField()
    ldk18_tatami_more = models.IntegerField()
    ldk15_tatami_more = models.IntegerField()
    ldk12_tatami_more = models.IntegerField()
    ldk2_places = models.IntegerField()
    the_second_floor_ldk = models.IntegerField()
    the_second_floor_living_room = models.IntegerField()
    stairs_set_inside_the_living_room = models.IntegerField()
    indoor_spiral_staircase = models.IntegerField()
    double_height_ceiling = models.IntegerField()
    double_height = models.IntegerField()
    out_pole_method = models.IntegerField()
    skeleton_infill = models.IntegerField()
    split_level_home = models.IntegerField()
    ceiling_height_of_at_least_3m = models.IntegerField()
    ceiling_height_of_at_least_2m7 = models.IntegerField()
    ceiling_height_of_at_least_2m5 = models.IntegerField()
    reverse_beam_method = models.IntegerField()
    folding_on_the_ceiling = models.IntegerField()
    gradient_ceiling = models.IntegerField()
    skylight = models.IntegerField()
    maisonette = models.IntegerField()
    loft = models.IntegerField()
    grenier = models.IntegerField()
    sunroom = models.IntegerField()
    all_rooms_are_as_big_as_8_tatami_mats_or_more = models.IntegerField()
    all_rooms_are_as_big_as_6_tatami_mats_or_more = models.IntegerField()
    bedroom_is_larger_than_10_or_more_tatami_mats = models.IntegerField()
    bedroom_is_larger_than_8_or_more_tatami_mats = models.IntegerField()
    japanese_style_room_is_as_large_as_8_or_more_tatami_mats = models.IntegerField()
    kitchen_is_as_large_as_5_or_more_mats = models.IntegerField()
    island_style_kitchen = models.IntegerField()
    open_style_kitchen = models.IntegerField()
    bath_tub_size_1_tsubo_or_more = models.IntegerField()
    garden_50_tsubo = models.IntegerField()
    garden_30_tsubo = models.IntegerField()
    garden_10_tsubo = models.IntegerField()
    study = models.IntegerField()
    light_coat = models.IntegerField()
    patio = models.IntegerField()
    inner_balcony = models.IntegerField()
    tsuboniwa = models.IntegerField()
    courtyard = models.IntegerField()
    wood_terrace = models.IntegerField()
    wood_deck = models.IntegerField()
    roof_balcony = models.IntegerField()
    rooftop_terrace = models.IntegerField()
    rooftop_garden = models.IntegerField()
    rooftop = models.IntegerField()
    terrace = models.IntegerField()
    parking_3_cars = models.IntegerField()
    parking_2_cars = models.IntegerField()
    private_garden = models.IntegerField()
    garden = models.IntegerField()
    home_garden = models.IntegerField()
    field = models.IntegerField()
    wide_balcony = models.IntegerField()
    there_is_a_water_faucet_on_the_balcony_rooftop = models.IntegerField()
    three_sided_balcony = models.IntegerField()
    l_shaped_balcony = models.IntegerField()
    two_way_balcony = models.IntegerField()
    double_sided_balcony = models.IntegerField()
    veranda = models.IntegerField()
    a_movable_partition = models.IntegerField()
    two_door_one_room = models.IntegerField()
    floor_plan_can_be_changed = models.IntegerField()
    customizable = models.IntegerField()
    diy_allowed = models.IntegerField()
    bungalow = models.IntegerField()
    frontage_10m_or_wider = models.IntegerField()
    frontage_8m_or_wider = models.IntegerField()
    expansive_dwelling_exterior = models.IntegerField()
    three_direction_dwelling_units = models.IntegerField()
    one_floor_one_dwelling_unit = models.IntegerField()
    corner_room_four_direction = models.IntegerField()
    corner_room = models.IntegerField()
    basement_room = models.IntegerField()
    utility_room = models.IntegerField()
    free_space = models.IntegerField()
    wall_bed = models.IntegerField()
    stockyards = models.IntegerField()
    storage_room = models.IntegerField()
    storeroom = models.IntegerField()
    attic_storage = models.IntegerField()
    walk_in_closet_2_places = models.IntegerField()
    walk_through_closet = models.IntegerField()
    closet_3_places = models.IntegerField()
    closet_2_places = models.IntegerField()
    walk_in_closet = models.IntegerField()
    closet = models.IntegerField()
    storage_more_than_2kan5 = models.IntegerField()
    storage_more_tha_2kan = models.IntegerField()
    storage_more_tha_1kan5 = models.IntegerField()
    under_stairs_storage = models.IntegerField()
    hanging_cupboard = models.IntegerField()
    under_floor_storage = models.IntegerField()
    closet_1 = models.IntegerField()
    built_within_2_years = models.IntegerField()
    built_within_3_years = models.IntegerField()
    built_within_5_years = models.IntegerField()
    number_24_hour_emergency_call_system = models.IntegerField(db_column='24_hour_emergency_call_system')  # Field renamed because it wasn't a valid Python identifier.
    airtight_housing = models.IntegerField()
    ventilation_heat_insulation_wb_method = models.IntegerField()
    ev_car_charging_equipment = models.IntegerField()
    smart_house = models.IntegerField()
    low_carbon_housing = models.IntegerField()
    photocatalytic_coating = models.IntegerField()
    sick_house_syndrome_prevention = models.IntegerField()
    non_formaldehyde = models.IntegerField()
    long_term_high_quality_housing = models.IntegerField()
    i100_year_service_life_of_concrete = models.IntegerField()
    high_strength_concrete = models.IntegerField()
    leading_house_builders_and_construction = models.IntegerField()
    order_home_builders_and_construction = models.IntegerField()
    construction_and_renovation_design_books = models.IntegerField()
    earthquake_resistance_standards_certificate = models.IntegerField()
    pre_inspection = models.IntegerField()
    defects_insurance_the_ministry_specified = models.IntegerField()
    defect_liability_real_estate_company_own = models.IntegerField()
    defects_insurance_inspection_compliance_with_standards = models.IntegerField()
    defects_insurance_the_ministry_specified_warranty_available = models.IntegerField()
    equipment_guaranteed = models.IntegerField()
    high_quality_rental_housing = models.IntegerField()
    crime_prevention_wquipped_apartment = models.IntegerField()
    fingerprint_authentication = models.IntegerField()
    vein_authentication = models.IntegerField()
    non_contact_type_ic_card_key = models.IntegerField()
    electronic_lock_system = models.IntegerField()
    entrance_remote_control_key = models.IntegerField()
    electronic_key = models.IntegerField()
    electronic_lock = models.IntegerField()
    key_card = models.IntegerField()
    heat_exchange_centralized_ventilation_system = models.IntegerField()
    number_24_hour_ventilation_system = models.IntegerField(db_column='24_hour_ventilation_system')  # Field renamed because it wasn't a valid Python identifier.
    passive_ventilation = models.IntegerField()
    solar_power_system = models.IntegerField()
    seismic_isolation_structure = models.IntegerField()
    seismic_control_structure = models.IntegerField()
    seismic_structure = models.IntegerField()
    eco_point_target_housing = models.IntegerField()
    energy_efficiency_rating = models.IntegerField()
    bels_energy_saving_standard_fit = models.IntegerField()
    renovation_council_approved = models.IntegerField()
    renovation = models.IntegerField()
    kitchen_unused = models.IntegerField()
    bathroom_unused = models.IntegerField()
    interior_and_exterior_renovation_already = models.IntegerField()
    exterior_renovation_already = models.IntegerField()
    interior_renovation_already = models.IntegerField()
    flooring_renewed = models.IntegerField()
    tatami_renewed = models.IntegerField()
    wallpaper_renewed = models.IntegerField()
    imported_kitchen = models.IntegerField()
    system_kitchen = models.IntegerField()
    glass_top_stove = models.IntegerField()
    kitchen_floor_heating = models.IntegerField()
    designers_property = models.IntegerField()
    imported_housing = models.IntegerField()
    exterior_concrete = models.IntegerField()
    interior_concrete = models.IntegerField()
    exterior_tiled = models.IntegerField()
    bathroom_tv = models.IntegerField()
    bathroom_audio = models.IntegerField()
    whirlpool = models.IntegerField()
    automatic_bath_heating_system = models.IntegerField()
    bathroom_heating = models.IntegerField()
    moisture_proof_ventilation_fan = models.IntegerField()
    all_electric_system = models.IntegerField()
    ih_cooking_stove = models.IntegerField()
    energy_saving_water_heaters = models.IntegerField()
    ecocute_heating_system = models.IntegerField()
    ecojo_z_heating_system = models.IntegerField()
    ecowill_heating_system = models.IntegerField()
    automatic_lighting_system = models.IntegerField()
    multi_media_outlet = models.IntegerField()
    hikari_internet_installed = models.IntegerField()
    station_nearby = models.IntegerField()
    within_a_5minute_walk_from_the_station = models.IntegerField()
    within_a_10minute_walk_from_the_station = models.IntegerField()
    easy_access_to_the_station = models.IntegerField()
    flat_ground = models.IntegerField()
    starting_station = models.IntegerField()
    express_stop_station = models.IntegerField()
    access_to_3_or_more_train_subway_lines = models.IntegerField()
    access_to_2_train_subway_lines = models.IntegerField()
    three_stations_accessible = models.IntegerField()
    two_stations_accessble = models.IntegerField()
    within_1_minute_walk_from_the_bus_stop = models.IntegerField()
    within_3_minute_walk_from_the_bus_stop = models.IntegerField()
    easy_access_to_the_city = models.IntegerField()
    suburban = models.IntegerField()
    carpark_with_remote_control_shutter = models.IntegerField()
    underground_carpark = models.IntegerField()
    indoor_parking = models.IntegerField()
    parking_shutter = models.IntegerField()
    paved_carpark = models.IntegerField()
    outdoor_parking = models.IntegerField()
    ground_level_carpark = models.IntegerField()
    flat_parking = models.IntegerField()
    high_roof_car_park_available = models.IntegerField()
    large_car_allowed_parking = models.IntegerField()
    flat_35_certificate = models.IntegerField()
    corresponding_to_the_flat_35s = models.IntegerField()
    design_evaluation_by_hyoukkakyoukai = models.IntegerField()
    construction_evaluation_by_hyoukakyoukai = models.IntegerField()
    number_2x4_method = models.IntegerField(db_column='2x4_method')  # Field renamed because it wasn't a valid Python identifier.
    number_2x6_method = models.IntegerField(db_column='2x6_method')  # Field renamed because it wasn't a valid Python identifier.
    housing_performance_warranty = models.IntegerField()
    equipment_warranty_division_available = models.IntegerField()
    fireproof_structure = models.IntegerField()
    semi_fireproof_structure = models.IntegerField()
    simple_fireproof_structure = models.IntegerField()
    formaldehyde_prevention = models.IntegerField()
    security_strengthening_region = models.IntegerField()
    concierge_service = models.IntegerField()
    reception_services = models.IntegerField()
    manager_on_duty_for_24_hours = models.IntegerField()
    on_sight_security_officer = models.IntegerField()
    a_live_in_property_manager = models.IntegerField()
    moderator_patrol = models.IntegerField()
    moderator_day_shift = models.IntegerField()
    number_24_hour_security = models.IntegerField(db_column='24_hour_security')  # Field renamed because it wasn't a valid Python identifier.
    security_system = models.IntegerField()
    contracted_with_security_company = models.IntegerField()
    security_enhancement = models.IntegerField()
    double_floor_double_ceiling = models.IntegerField()
    double_ceiling_structure = models.IntegerField()
    soundproofed = models.IntegerField()
    soundproof_sash = models.IntegerField()
    one_floor_two_dwelling_units = models.IntegerField()
    corner_lot = models.IntegerField()
    no_building_on_the_frontside = models.IntegerField()
    adjacent_building_distance_2m_or_more = models.IntegerField()
    connected_road_width_of_6m_or_wider = models.IntegerField()
    monitor_with_intercom = models.IntegerField()
    auto_lock_with_monitor = models.IntegerField()
    auto_lock = models.IntegerField()
    ten_key_lock = models.IntegerField()
    dimple_key = models.IntegerField()
    security_glass = models.IntegerField()
    double_glazing = models.IntegerField()
    electric_shutter = models.IntegerField()
    security_shutters = models.IntegerField()
    shutter = models.IntegerField()
    large_scale_properties = models.IntegerField()
    in_a_large_scale_developped_area = models.IntegerField()
    owner_dwelling_located_in_the_same_building = models.IntegerField()
    owners_residence_nearby = models.IntegerField()
    musical_instruments_allowed = models.IntegerField()
    musical_instruments_consultation = models.IntegerField()
    resort_location = models.IntegerField()
    summer_resort = models.IntegerField()
    all_rooms_face_the_southband = models.IntegerField()
    all_rooms_face_southwest_direction = models.IntegerField()
    all_rooms_face_southeast_direction = models.IntegerField()
    facing_southband = models.IntegerField()
    located_in_tired_property_lot_faceing_southband = models.IntegerField()
    southwest_corner_room = models.IntegerField()
    facing_with_southside_road = models.IntegerField()
    southeast_corner_room = models.IntegerField()
    southside_4_rooms = models.IntegerField()
    southside_3_rooms = models.IntegerField()
    southside_2_rooms = models.IntegerField()
    southside_balcony = models.IntegerField()
    south_side_living = models.IntegerField()
    garden_on_the_southside = models.IntegerField()
    three_demention_lighting = models.IntegerField()
    all_rooms_are_two_sided_lighting = models.IntegerField()
    two_face_lighting = models.IntegerField()
    exellent_lightning = models.IntegerField()
    window_equipped_in_the_kitchen = models.IntegerField()
    window_qeuipped_in_the_bathroom = models.IntegerField()
    window_equipped_in_the_bathroom = models.IntegerField()
    airtight_high_insulated_houses = models.IntegerField()
    high_insulated_houses = models.IntegerField()
    external_insulation = models.IntegerField()
    under_floor_ventilation = models.IntegerField()
    central_heating = models.IntegerField()
    all_rooms_are_air_conditioned = models.IntegerField()
    built_in_air_conditioning = models.IntegerField()
    number_4_air_conditioning_or_more = models.IntegerField(db_column='4_air_conditioning_or_more')  # Field renamed because it wasn't a valid Python identifier.
    number_3_air_conditioning = models.IntegerField(db_column='3_air_conditioning')  # Field renamed because it wasn't a valid Python identifier.
    number_2_air_conditioning = models.IntegerField(db_column='2_air_conditioning')  # Field renamed because it wasn't a valid Python identifier.
    each_room_installed_with_individual_air_conditioning = models.IntegerField()
    air_conditioning = models.IntegerField()
    air_conditioner = models.IntegerField()
    ff_heating = models.IntegerField()
    kerosene_ff_heating = models.IntegerField()
    gas_ff_heating = models.IntegerField()
    regenerative_floor_heating = models.IntegerField()
    floor_heating = models.IntegerField()
    hot_water_heater = models.IntegerField()
    fan_convector_heating = models.IntegerField()
    regenerative_heating = models.IntegerField()
    gas_heating = models.IntegerField()
    oil_heating = models.IntegerField()
    kitchen_feet_warm_air_fan = models.IntegerField()
    bathroom_floor_heating = models.IntegerField()
    activated_carbon_installed = models.IntegerField()
    diatomaceous_earth_wall_paint = models.IntegerField()
    solid_wood_flooring = models.IntegerField()
    natural_materials = models.IntegerField()
    sauna = models.IntegerField()
    mist_sauna = models.IntegerField()
    japanese_cypress_bath = models.IntegerField()
    open_air_bath = models.IntegerField()
    with_hot_spring = models.IntegerField()
    rights_to_use_the_onsen = models.IntegerField()
    allowed_to_use_the_onsen = models.IntegerField()
    kitchen_with_a_counter = models.IntegerField()
    open_to_living_or_dining_kitchen = models.IntegerField()
    downlight = models.IntegerField()
    indirect_lightning = models.IntegerField()
    with_blind = models.IntegerField()
    with_the_roll_screen = models.IntegerField()
    partial_flooring = models.IntegerField()
    only_western_style_rooms = models.IntegerField()
    floor_tiles_with_flooring_style = models.IntegerField()
    garbage_collection_services = models.IntegerField()
    allowed_to_access_to_the_garbage_point_24hours = models.IntegerField()
    garbage_yard = models.IntegerField()
    on_site_waste_yard = models.IntegerField()
    cleaning_box = models.IntegerField()
    coin_laundry = models.IntegerField()
    lift_wall_storage = models.IntegerField()
    shoes_closet = models.IntegerField()
    shoes_cupboads = models.IntegerField()
    ceiling_height_shoe_closet = models.IntegerField()
    pantry = models.IntegerField()
    equipping_cupboard = models.IntegerField()
    number_3ways_kitchen = models.IntegerField(db_column='3ways_kitchen')  # Field renamed because it wasn't a valid Python identifier.
    number_2ways_kitchen = models.IntegerField(db_column='2ways_kitchen')  # Field renamed because it wasn't a valid Python identifier.
    u_shaped_kitchen = models.IntegerField()
    l_shaped_kitchen = models.IntegerField()
    two_rows_style_kitchen = models.IntegerField()
    one_row_stule_kitchen = models.IntegerField()
    independent_kitchen = models.IntegerField()
    four_or_more_burners_on_the_stove = models.IntegerField()
    three_burners_on_the_stove = models.IntegerField()
    two_burners_on_the_stove = models.IntegerField()
    one_burner_on_the_stove = models.IntegerField()
    with_gas_stove = models.IntegerField()
    already_stove_installed = models.IntegerField()
    gas_stove_allowed = models.IntegerField()
    grill = models.IntegerField()
    microwave_oven = models.IntegerField()
    gas_oven = models.IntegerField()
    gas_stove = models.IntegerField()
    two_way_washroom = models.IntegerField()
    three_way_washroom = models.IntegerField()
    toilet_3_places = models.IntegerField()
    toilet_2_places = models.IntegerField()
    high_function_toilet = models.IntegerField()
    washing_stand_deep_style = models.IntegerField()
    large_washing_stand = models.IntegerField()
    washing_stand_with_three_sided_mirror = models.IntegerField()
    washing_stand_with_vertical_lighting = models.IntegerField()
    gym = models.IntegerField()
    exercise_machine_room = models.IntegerField()
    public_bath = models.IntegerField()
    shared_bathroom = models.IntegerField()
    nursery = models.IntegerField()
    childrens_room = models.IntegerField()
    slop_sink = models.IntegerField()
    exclusive_network_line_for_internet = models.IntegerField()
    cable_broadcast = models.IntegerField()
    wireless_lan = models.IntegerField()
    lan = models.IntegerField()
    catv = models.IntegerField()
    bs = models.IntegerField()
    cs = models.IntegerField()
    furnished = models.IntegerField()
    with_dining_table = models.IntegerField()
    set_up_bed = models.IntegerField()
    with_curtain = models.IntegerField()
    all_rooms_with_lighting = models.IntegerField()
    lighting_equipment = models.IntegerField()
    each_room_lighting = models.IntegerField()
    tv_set = models.IntegerField()
    with_home_appliances = models.IntegerField()
    microwave = models.IntegerField()
    refrigerator = models.IntegerField()
    washing_machine = models.IntegerField()
    dishwasher_dryer = models.IntegerField()
    dishwasher = models.IntegerField()
    dish_dryer = models.IntegerField()
    electric_cooker = models.IntegerField()
    electric_stove = models.IntegerField()
    clothes_dryer = models.IntegerField()
    washing_and_drying_machine = models.IntegerField()
    bathroom_dryer = models.IntegerField()
    indoor_laundry_pole = models.IntegerField()
    outdoor_laundry = models.IntegerField()
    indoor_washing_machine_installation_place = models.IntegerField()
    adjacent_japanese_style_room = models.IntegerField()
    japanese_style_adjacent_room = models.IntegerField()
    japanese_style_room = models.IntegerField()
    snow_melting_equipment = models.IntegerField()
    snow_melting_tank = models.IntegerField()
    porte_cochere = models.IntegerField()
    driveway_space = models.IntegerField()
    close_to_the_super_market = models.IntegerField()
    two_elevators = models.IntegerField()
    home_delivery_box = models.IntegerField()
    each_room_secure_access_without_tresspassing = models.IntegerField()
    back_entrance = models.IntegerField()
    parking_for_visitors = models.IntegerField()
    all_rooms_are_equipped_with_storage = models.IntegerField()
    disposer = models.IntegerField()
    water_filter = models.IntegerField()
    tire_yard = models.IntegerField()
    wash_basin_set_on_the_second_floor = models.IntegerField()
    modular_bathroom = models.IntegerField()
    reheating_bath_system = models.IntegerField()
    separate_bathroom = models.IntegerField()
    kitchen_2_places = models.IntegerField()
    double_wash_bowl = models.IntegerField()
    two_toilets = models.IntegerField()
    walk_in_type_shoe_closet = models.IntegerField()
    independent_bathroom_independent_toilet = models.IntegerField()
    home_elevator = models.IntegerField()
    multi_function_shower = models.IntegerField()
    double_door_with_two_different_size = models.IntegerField()
    theater_room = models.IntegerField()
    guest_rooms = models.IntegerField()
    party_room_for_common_use = models.IntegerField()
    rental_meeting_room = models.IntegerField()
    housing_with_office_space = models.IntegerField()
    meeting_room = models.IntegerField()
    on_site_play_ground = models.IntegerField()
    rental_video = models.IntegerField()
    melting_snow_device_for_sideway_road = models.IntegerField()
    outdoor_power_strip = models.IntegerField()
    storage_place_above_the_closet = models.IntegerField()
    wash_room_with_storage = models.IntegerField()
    entrance_storage = models.IntegerField()
    ventilation_good = models.IntegerField()
    ocean_view = models.IntegerField()
    near_the_beach = models.IntegerField()
    riverside = models.IntegerField()
    lake_pond_view = models.IntegerField()
    fireworks_view = models.IntegerField()
    high_rise_property = models.IntegerField()
    top_floor = models.IntegerField()
    upper_floors = models.IntegerField()
    excellent_view = models.IntegerField()
    rich_in_nature_residential_area = models.IntegerField()
    a_quiet_and_peaceful_residential_area = models.IntegerField()
    mountain_view = models.IntegerField()
    scenic_zone = models.IntegerField()
    wire_buried = models.IntegerField()
    low_rise_exclusive_residential_area = models.IntegerField()
    easy_access_to_the_public_park = models.IntegerField()
    on_site_park = models.IntegerField()
    a_region_having_many_educational_institutions = models.IntegerField()
    located_on_a_high_ground = models.IntegerField()
    countryside = models.IntegerField()
    vertically_long_window = models.IntegerField()
    fewer_traffic = models.IntegerField()
    fireplace = models.IntegerField()
    ceiling_fan = models.IntegerField()
    community_open_air_bath = models.IntegerField()
    swimming_pool = models.IntegerField()
    carpeted_floor = models.IntegerField()
    low_table_with_heater_set_on_the_hole = models.IntegerField()
    hearth = models.IntegerField()
    bay_window = models.IntegerField()
    alcove = models.IntegerField()
    tatami_corner = models.IntegerField()
    tearoom = models.IntegerField()
    old_house_style = models.IntegerField()
    log_cabin = models.IntegerField()
    old_city_style_house = models.IntegerField()
    sukiyazukuri = models.IntegerField()
    ryukyu_tatami = models.IntegerField()
    iriomoya_style_roof_top = models.IntegerField()
    shoin_zukuri = models.IntegerField()
    all_rooms_flooring = models.IntegerField()
    building_confirmation_completion_inspected_certificate = models.IntegerField()
    architect_building_inspection_report = models.IntegerField()
    repair_and_inspection_records = models.IntegerField()
    seismic_reinforcement_work_already = models.IntegerField()
    seismic_door = models.IntegerField()
    law_compliance_investigation_report = models.IntegerField()
    wind_resistant_structure = models.IntegerField()
    pre_ground_survey = models.IntegerField()
    uninterruptible_power_system = models.IntegerField()
    mainstay = models.IntegerField()
    yonsunn_12cmx12cm_pillar = models.IntegerField()
    hokkaido_style_housing = models.IntegerField()
    no_falling_snow_building = models.IntegerField()
    double_lock_key = models.IntegerField()
    surveillance_camera = models.IntegerField()
    no_housing_units_on_downstairs = models.IntegerField()
    no_housing_units_on_above = models.IntegerField()
    vinyl_flooring = models.IntegerField()
    human_light_sensor = models.IntegerField()
    seismic_latch_hanging_cupboard = models.IntegerField()
    alcove_1 = models.IntegerField()
    less_barrier_interior_housing = models.IntegerField()
    floor_without_step = models.IntegerField()
    with_elevator_stairs = models.IntegerField()
    entrance_handrail = models.IntegerField()
    foot_lights = models.IntegerField()
    with_aed = models.IntegerField()
    low_rise_apartment = models.IntegerField()
    within_10_minutes_walk_from_hospital = models.IntegerField()
    water_saving_toilet = models.IntegerField()
    energy_saving_measures = models.IntegerField()
    shuttle_bus = models.IntegerField()
    multiple_bus_routes = models.IntegerField()
    i100yen_bus_routes = models.IntegerField()
    along_with_the_streetcar_route = models.IntegerField()
    bicycle_parking = models.IntegerField()
    bike_shelter = models.IntegerField()
    warehouse = models.IntegerField()
    warehouse_1 = models.IntegerField()
    shower_room = models.IntegerField()
    instant_water_heater = models.IntegerField()
    leash_hook = models.IntegerField()
    multiple_common_facilities = models.IntegerField()
    maintained_sidewalk = models.IntegerField()
    dirt_floor = models.IntegerField()
    well = models.IntegerField()
    windbreak_room = models.IntegerField()
    free_catv = models.IntegerField()
    free_internet_access = models.IntegerField()
    picture_rails = models.IntegerField()
    pet_doorway = models.IntegerField()
    one_of_the_developped_property = models.IntegerField()
    office_use_allowed = models.IntegerField()
    pet_toilet = models.IntegerField()
    pets_foot_shower = models.IntegerField()
    powder_room = models.IntegerField()
    golf_course_near_by = models.IntegerField()
    ski_resorts_near_by = models.IntegerField()
    tennis_courts_near_by = models.IntegerField()
    within_10_minutes_walk_from_the_elementary_school = models.IntegerField()
    heating = models.IntegerField()
    wooden_floor = models.IntegerField()
    suited_for_soho = models.IntegerField()
    owners_residence = models.IntegerField()
    small_dogs_accepted = models.IntegerField()
    share_house = models.IntegerField()
    the_first_floor_on_stilts = models.IntegerField()
    three_pr_more_story_above = models.IntegerField()
    single_water_heating_system = models.IntegerField()
    it_jyusetsu_corresponding_property = models.IntegerField()
    two_story = models.IntegerField()
    trunk_room = models.IntegerField()
    cats_allowed = models.IntegerField()
    large_dogs_accepted = models.IntegerField()
    pets_negotiable = models.IntegerField()
    pet_friendly = models.IntegerField()
    pets_not_allowed = models.IntegerField()
    eateries_allowed = models.IntegerField()
    restaurants_not_allowed = models.IntegerField()
    musical_instruments_prohibited = models.IntegerField()
    parttime_building_manager = models.IntegerField()
    land_readjustment_area = models.IntegerField()
    listedn_on_vacant_real_estate_listings = models.IntegerField()
    no_resturuction_of_constructer_builder_selection = models.IntegerField()
    building_restricted_lot = models.IntegerField()
    high_temperature_water_heating_system_bath = models.IntegerField()
    stilts_platform = models.IntegerField()
    spandrel_wall = models.IntegerField()
    reconstruction_prohibited_lot = models.IntegerField()
    office_not_allowed = models.IntegerField()
    landlot_for_apartment_construction = models.IntegerField()
    shaping_land = models.IntegerField()
    gutter = models.IntegerField()
    house_with_store = models.IntegerField()
    staircase = models.IntegerField()
    housing_lot_for_sale = models.IntegerField()
    other_1 = models.CharField(max_length=191, blank=True, null=True)
    other_2 = models.CharField(max_length=191, blank=True, null=True)
    other_3 = models.CharField(max_length=191, blank=True, null=True)
    other_4 = models.CharField(max_length=191, blank=True, null=True)
    other_5 = models.CharField(max_length=191, blank=True, null=True)
    property_details_url = models.TextField(blank=True, null=True)
    request_for_property_information = models.TextField(blank=True, null=True)
    contact_phone_number = models.CharField(max_length=191, blank=True, null=True)
    date_of_registration = models.CharField(max_length=191, blank=True, null=True)
    date_of_renewing_registeration = models.CharField(max_length=191, blank=True, null=True)
    total_spec_points_age = models.FloatField()
    total_spec_points_closeness = models.FloatField()
    total_spec_points_size = models.FloatField()
    total_spec_points_convenient = models.FloatField()
    total_spec_points_security = models.FloatField()
    total_spec_points_comfortable = models.FloatField()
    sales_category = models.CharField(max_length=191, blank=True, null=True)
    property_category = models.CharField(max_length=191, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'filtered_props_2'


class Informations(models.Model):
    common_property_no = models.CharField(max_length=191)
    site_id = models.CharField(max_length=191)
    property_id = models.CharField(max_length=191)
    sales_category = models.CharField(max_length=191)
    property_category = models.CharField(max_length=191)
    property_type = models.CharField(max_length=191)
    property_name = models.CharField(max_length=191)
    address_1 = models.CharField(max_length=191, blank=True, null=True)
    address_2 = models.CharField(max_length=191, blank=True, null=True)
    address_3 = models.CharField(max_length=191, blank=True, null=True)
    price_1 = models.FloatField()
    price_2 = models.FloatField()
    property_size_1 = models.FloatField()
    property_size_2 = models.FloatField()
    floor_size_1 = models.FloatField()
    floor_size_2 = models.FloatField()
    floor_plan = models.CharField(max_length=191, blank=True, null=True)
    train_subway_line_1 = models.CharField(max_length=191, blank=True, null=True)
    train_subway_station_1 = models.CharField(max_length=191, blank=True, null=True)
    walking_minutes_from_station_1 = models.FloatField()
    walking_distance_from_the_station_1 = models.FloatField()
    minutes_from_the_station_by_bus_1 = models.FloatField()
    walking_minutes_from_bus_stop_1 = models.FloatField()
    train_subway_line_2 = models.CharField(max_length=191, blank=True, null=True)
    train_subway_station_2 = models.CharField(max_length=191, blank=True, null=True)
    walking_minutes_from_the_station_2 = models.FloatField()
    walking_distance_from_the_station_2 = models.FloatField()
    minutes_from_the_station_by_bus_2 = models.FloatField()
    walking_minutes_from_bus_stop_2 = models.FloatField()
    train_subway_line_3 = models.CharField(max_length=191, blank=True, null=True)
    train_subway_station_3 = models.CharField(max_length=191, blank=True, null=True)
    walking_minutes_from_the_station_3 = models.FloatField()
    walking_distance_from_the_station_3 = models.FloatField()
    minutes_from_the_station_by_bus_3 = models.FloatField()
    walking_minutes_from_bus_stop_3 = models.FloatField()
    year_month_built = models.CharField(max_length=191, blank=True, null=True)
    building_structure = models.CharField(max_length=191, blank=True, null=True)
    building_size = models.CharField(max_length=191, blank=True, null=True)
    floor_number = models.CharField(max_length=191, blank=True, null=True)
    room_number = models.CharField(max_length=191, blank=True, null=True)
    land_rights = models.CharField(max_length=191, blank=True, null=True)
    total_units = models.FloatField()
    owner_1 = models.CharField(max_length=191, blank=True, null=True)
    owner_2 = models.CharField(max_length=191, blank=True, null=True)
    contractor_1 = models.CharField(max_length=191, blank=True, null=True)
    contractor_2 = models.CharField(max_length=191, blank=True, null=True)
    latitude = models.CharField(max_length=191)
    longitude = models.CharField(max_length=191)
    walking_minutes_from_the_station_99 = models.FloatField()
    comments = models.TextField(blank=True, null=True)
    the_area_occupied_30_tsubo_or_more = models.IntegerField()
    the_area_occupied_25_tsubo_or_more = models.IntegerField()
    two_family_houses = models.IntegerField()
    annex = models.IntegerField()
    ldk25_tatami_more = models.IntegerField()
    ldk20_tatami_more = models.IntegerField()
    ldk18_tatami_more = models.IntegerField()
    ldk15_tatami_more = models.IntegerField()
    ldk12_tatami_more = models.IntegerField()
    ldk2_places = models.IntegerField()
    the_second_floor_ldk = models.IntegerField()
    the_second_floor_living_room = models.IntegerField()
    stairs_set_inside_the_living_room = models.IntegerField()
    indoor_spiral_staircase = models.IntegerField()
    double_height_ceiling = models.IntegerField()
    double_height = models.IntegerField()
    out_pole_method = models.IntegerField()
    skeleton_infill = models.IntegerField()
    split_level_home = models.IntegerField()
    ceiling_height_of_at_least_3m = models.IntegerField()
    ceiling_height_of_at_least_2m7 = models.IntegerField()
    ceiling_height_of_at_least_2m5 = models.IntegerField()
    reverse_beam_method = models.IntegerField()
    folding_on_the_ceiling = models.IntegerField()
    gradient_ceiling = models.IntegerField()
    skylight = models.IntegerField()
    maisonette = models.IntegerField()
    loft = models.IntegerField()
    grenier = models.IntegerField()
    sunroom = models.IntegerField()
    all_rooms_are_as_big_as_8_tatami_mats_or_more = models.IntegerField()
    all_rooms_are_as_big_as_6_tatami_mats_or_more = models.IntegerField()
    bedroom_is_larger_than_10_or_more_tatami_mats = models.IntegerField()
    bedroom_is_larger_than_8_or_more_tatami_mats = models.IntegerField()
    japanese_style_room_is_as_large_as_8_or_more_tatami_mats = models.IntegerField()
    kitchen_is_as_large_as_5_or_more_mats = models.IntegerField()
    island_style_kitchen = models.IntegerField()
    open_style_kitchen = models.IntegerField()
    bath_tub_size_1_tsubo_or_more = models.IntegerField()
    garden_50_tsubo = models.IntegerField()
    garden_30_tsubo = models.IntegerField()
    garden_10_tsubo = models.IntegerField()
    study = models.IntegerField()
    light_coat = models.IntegerField()
    patio = models.IntegerField()
    inner_balcony = models.IntegerField()
    tsuboniwa = models.IntegerField()
    courtyard = models.IntegerField()
    wood_terrace = models.IntegerField()
    wood_deck = models.IntegerField()
    roof_balcony = models.IntegerField()
    rooftop_terrace = models.IntegerField()
    rooftop_garden = models.IntegerField()
    rooftop = models.IntegerField()
    terrace = models.IntegerField()
    parking_3_cars = models.IntegerField()
    parking_2_cars = models.IntegerField()
    private_garden = models.IntegerField()
    garden = models.IntegerField()
    home_garden = models.IntegerField()
    field = models.IntegerField()
    wide_balcony = models.IntegerField()
    there_is_a_water_faucet_on_the_balcony_rooftop = models.IntegerField()
    three_sided_balcony = models.IntegerField()
    l_shaped_balcony = models.IntegerField()
    two_way_balcony = models.IntegerField()
    double_sided_balcony = models.IntegerField()
    veranda = models.IntegerField()
    a_movable_partition = models.IntegerField()
    two_door_one_room = models.IntegerField()
    floor_plan_can_be_changed = models.IntegerField()
    customizable = models.IntegerField()
    diy_allowed = models.IntegerField()
    bungalow = models.IntegerField()
    frontage_10m_or_wider = models.IntegerField()
    frontage_8m_or_wider = models.IntegerField()
    expansive_dwelling_exterior = models.IntegerField()
    three_direction_dwelling_units = models.IntegerField()
    one_floor_one_dwelling_unit = models.IntegerField()
    corner_room_four_direction = models.IntegerField()
    corner_room = models.IntegerField()
    basement_room = models.IntegerField()
    utility_room = models.IntegerField()
    free_space = models.IntegerField()
    wall_bed = models.IntegerField()
    stockyards = models.IntegerField()
    storage_room = models.IntegerField()
    storeroom = models.IntegerField()
    attic_storage = models.IntegerField()
    walk_in_closet_2_places = models.IntegerField()
    walk_through_closet = models.IntegerField()
    closet_3_places = models.IntegerField()
    closet_2_places = models.IntegerField()
    walk_in_closet = models.IntegerField()
    closet = models.IntegerField()
    storage_more_than_2kan5 = models.IntegerField()
    storage_more_tha_2kan = models.IntegerField()
    storage_more_tha_1kan5 = models.IntegerField()
    under_stairs_storage = models.IntegerField()
    hanging_cupboard = models.IntegerField()
    under_floor_storage = models.IntegerField()
    closet_1 = models.IntegerField()
    built_within_2_years = models.IntegerField()
    built_within_3_years = models.IntegerField()
    built_within_5_years = models.IntegerField()
    number_24_hour_emergency_call_system = models.IntegerField(db_column='24_hour_emergency_call_system')  # Field renamed because it wasn't a valid Python identifier.
    airtight_housing = models.IntegerField()
    ventilation_heat_insulation_wb_method = models.IntegerField()
    ev_car_charging_equipment = models.IntegerField()
    smart_house = models.IntegerField()
    low_carbon_housing = models.IntegerField()
    photocatalytic_coating = models.IntegerField()
    sick_house_syndrome_prevention = models.IntegerField()
    non_formaldehyde = models.IntegerField()
    long_term_high_quality_housing = models.IntegerField()
    i100_year_service_life_of_concrete = models.IntegerField()
    high_strength_concrete = models.IntegerField()
    leading_house_builders_and_construction = models.IntegerField()
    order_home_builders_and_construction = models.IntegerField()
    construction_and_renovation_design_books = models.IntegerField()
    earthquake_resistance_standards_certificate = models.IntegerField()
    pre_inspection = models.IntegerField()
    defects_insurance_the_ministry_specified = models.IntegerField()
    defect_liability_real_estate_company_own = models.IntegerField()
    defects_insurance_inspection_compliance_with_standards = models.IntegerField()
    defects_insurance_the_ministry_specified_warranty_available = models.IntegerField()
    equipment_guaranteed = models.IntegerField()
    high_quality_rental_housing = models.IntegerField()
    crime_prevention_wquipped_apartment = models.IntegerField()
    fingerprint_authentication = models.IntegerField()
    vein_authentication = models.IntegerField()
    non_contact_type_ic_card_key = models.IntegerField()
    electronic_lock_system = models.IntegerField()
    entrance_remote_control_key = models.IntegerField()
    electronic_key = models.IntegerField()
    electronic_lock = models.IntegerField()
    key_card = models.IntegerField()
    heat_exchange_centralized_ventilation_system = models.IntegerField()
    number_24_hour_ventilation_system = models.IntegerField(db_column='24_hour_ventilation_system')  # Field renamed because it wasn't a valid Python identifier.
    passive_ventilation = models.IntegerField()
    solar_power_system = models.IntegerField()
    seismic_isolation_structure = models.IntegerField()
    seismic_control_structure = models.IntegerField()
    seismic_structure = models.IntegerField()
    eco_point_target_housing = models.IntegerField()
    energy_efficiency_rating = models.IntegerField()
    bels_energy_saving_standard_fit = models.IntegerField()
    renovation_council_approved = models.IntegerField()
    renovation = models.IntegerField()
    kitchen_unused = models.IntegerField()
    bathroom_unused = models.IntegerField()
    interior_and_exterior_renovation_already = models.IntegerField()
    exterior_renovation_already = models.IntegerField()
    interior_renovation_already = models.IntegerField()
    flooring_renewed = models.IntegerField()
    tatami_renewed = models.IntegerField()
    wallpaper_renewed = models.IntegerField()
    imported_kitchen = models.IntegerField()
    system_kitchen = models.IntegerField()
    glass_top_stove = models.IntegerField()
    kitchen_floor_heating = models.IntegerField()
    designers_property = models.IntegerField()
    imported_housing = models.IntegerField()
    exterior_concrete = models.IntegerField()
    interior_concrete = models.IntegerField()
    exterior_tiled = models.IntegerField()
    bathroom_tv = models.IntegerField()
    bathroom_audio = models.IntegerField()
    whirlpool = models.IntegerField()
    automatic_bath_heating_system = models.IntegerField()
    bathroom_heating = models.IntegerField()
    moisture_proof_ventilation_fan = models.IntegerField()
    all_electric_system = models.IntegerField()
    ih_cooking_stove = models.IntegerField()
    energy_saving_water_heaters = models.IntegerField()
    ecocute_heating_system = models.IntegerField()
    ecojo_z_heating_system = models.IntegerField()
    ecowill_heating_system = models.IntegerField()
    automatic_lighting_system = models.IntegerField()
    multi_media_outlet = models.IntegerField()
    hikari_internet_installed = models.IntegerField()
    station_nearby = models.IntegerField()
    within_a_5minute_walk_from_the_station = models.IntegerField()
    within_a_10minute_walk_from_the_station = models.IntegerField()
    easy_access_to_the_station = models.IntegerField()
    flat_ground = models.IntegerField()
    starting_station = models.IntegerField()
    express_stop_station = models.IntegerField()
    access_to_3_or_more_train_subway_lines = models.IntegerField()
    access_to_2_train_subway_lines = models.IntegerField()
    three_stations_accessible = models.IntegerField()
    two_stations_accessble = models.IntegerField()
    within_1_minute_walk_from_the_bus_stop = models.IntegerField()
    within_3_minute_walk_from_the_bus_stop = models.IntegerField()
    easy_access_to_the_city = models.IntegerField()
    suburban = models.IntegerField()
    carpark_with_remote_control_shutter = models.IntegerField()
    underground_carpark = models.IntegerField()
    indoor_parking = models.IntegerField()
    parking_shutter = models.IntegerField()
    paved_carpark = models.IntegerField()
    outdoor_parking = models.IntegerField()
    ground_level_carpark = models.IntegerField()
    flat_parking = models.IntegerField()
    high_roof_car_park_available = models.IntegerField()
    large_car_allowed_parking = models.IntegerField()
    flat_35_certificate = models.IntegerField()
    corresponding_to_the_flat_35s = models.IntegerField()
    design_evaluation_by_hyoukkakyoukai = models.IntegerField()
    construction_evaluation_by_hyoukakyoukai = models.IntegerField()
    number_2x4_method = models.IntegerField(db_column='2x4_method')  # Field renamed because it wasn't a valid Python identifier.
    number_2x6_method = models.IntegerField(db_column='2x6_method')  # Field renamed because it wasn't a valid Python identifier.
    housing_performance_warranty = models.IntegerField()
    equipment_warranty_division_available = models.IntegerField()
    fireproof_structure = models.IntegerField()
    semi_fireproof_structure = models.IntegerField()
    simple_fireproof_structure = models.IntegerField()
    formaldehyde_prevention = models.IntegerField()
    security_strengthening_region = models.IntegerField()
    concierge_service = models.IntegerField()
    reception_services = models.IntegerField()
    manager_on_duty_for_24_hours = models.IntegerField()
    on_sight_security_officer = models.IntegerField()
    a_live_in_property_manager = models.IntegerField()
    moderator_patrol = models.IntegerField()
    moderator_day_shift = models.IntegerField()
    number_24_hour_security = models.IntegerField(db_column='24_hour_security')  # Field renamed because it wasn't a valid Python identifier.
    security_system = models.IntegerField()
    contracted_with_security_company = models.IntegerField()
    security_enhancement = models.IntegerField()
    double_floor_double_ceiling = models.IntegerField()
    double_ceiling_structure = models.IntegerField()
    soundproofed = models.IntegerField()
    soundproof_sash = models.IntegerField()
    one_floor_two_dwelling_units = models.IntegerField()
    corner_lot = models.IntegerField()
    no_building_on_the_frontside = models.IntegerField()
    adjacent_building_distance_2m_or_more = models.IntegerField()
    connected_road_width_of_6m_or_wider = models.IntegerField()
    monitor_with_intercom = models.IntegerField()
    auto_lock_with_monitor = models.IntegerField()
    auto_lock = models.IntegerField()
    ten_key_lock = models.IntegerField()
    dimple_key = models.IntegerField()
    security_glass = models.IntegerField()
    double_glazing = models.IntegerField()
    electric_shutter = models.IntegerField()
    security_shutters = models.IntegerField()
    shutter = models.IntegerField()
    large_scale_properties = models.IntegerField()
    in_a_large_scale_developped_area = models.IntegerField()
    owner_dwelling_located_in_the_same_building = models.IntegerField()
    owners_residence_nearby = models.IntegerField()
    musical_instruments_allowed = models.IntegerField()
    musical_instruments_consultation = models.IntegerField()
    resort_location = models.IntegerField()
    summer_resort = models.IntegerField()
    all_rooms_face_the_southband = models.IntegerField()
    all_rooms_face_southwest_direction = models.IntegerField()
    all_rooms_face_southeast_direction = models.IntegerField()
    facing_southband = models.IntegerField()
    located_in_tired_property_lot_faceing_southband = models.IntegerField()
    southwest_corner_room = models.IntegerField()
    facing_with_southside_road = models.IntegerField()
    southeast_corner_room = models.IntegerField()
    southside_4_rooms = models.IntegerField()
    southside_3_rooms = models.IntegerField()
    southside_2_rooms = models.IntegerField()
    southside_balcony = models.IntegerField()
    south_side_living = models.IntegerField()
    garden_on_the_southside = models.IntegerField()
    three_demention_lighting = models.IntegerField()
    all_rooms_are_two_sided_lighting = models.IntegerField()
    two_face_lighting = models.IntegerField()
    exellent_lightning = models.IntegerField()
    window_equipped_in_the_kitchen = models.IntegerField()
    window_qeuipped_in_the_bathroom = models.IntegerField()
    window_equipped_in_the_bathroom = models.IntegerField()
    airtight_high_insulated_houses = models.IntegerField()
    high_insulated_houses = models.IntegerField()
    external_insulation = models.IntegerField()
    under_floor_ventilation = models.IntegerField()
    central_heating = models.IntegerField()
    all_rooms_are_air_conditioned = models.IntegerField()
    built_in_air_conditioning = models.IntegerField()
    number_4_air_conditioning_or_more = models.IntegerField(db_column='4_air_conditioning_or_more')  # Field renamed because it wasn't a valid Python identifier.
    number_3_air_conditioning = models.IntegerField(db_column='3_air_conditioning')  # Field renamed because it wasn't a valid Python identifier.
    number_2_air_conditioning = models.IntegerField(db_column='2_air_conditioning')  # Field renamed because it wasn't a valid Python identifier.
    each_room_installed_with_individual_air_conditioning = models.IntegerField()
    air_conditioning = models.IntegerField()
    air_conditioner = models.IntegerField()
    ff_heating = models.IntegerField()
    kerosene_ff_heating = models.IntegerField()
    gas_ff_heating = models.IntegerField()
    regenerative_floor_heating = models.IntegerField()
    floor_heating = models.IntegerField()
    hot_water_heater = models.IntegerField()
    fan_convector_heating = models.IntegerField()
    regenerative_heating = models.IntegerField()
    gas_heating = models.IntegerField()
    oil_heating = models.IntegerField()
    kitchen_feet_warm_air_fan = models.IntegerField()
    bathroom_floor_heating = models.IntegerField()
    activated_carbon_installed = models.IntegerField()
    diatomaceous_earth_wall_paint = models.IntegerField()
    solid_wood_flooring = models.IntegerField()
    natural_materials = models.IntegerField()
    sauna = models.IntegerField()
    mist_sauna = models.IntegerField()
    japanese_cypress_bath = models.IntegerField()
    open_air_bath = models.IntegerField()
    with_hot_spring = models.IntegerField()
    rights_to_use_the_onsen = models.IntegerField()
    allowed_to_use_the_onsen = models.IntegerField()
    kitchen_with_a_counter = models.IntegerField()
    open_to_living_or_dining_kitchen = models.IntegerField()
    downlight = models.IntegerField()
    indirect_lightning = models.IntegerField()
    with_blind = models.IntegerField()
    with_the_roll_screen = models.IntegerField()
    partial_flooring = models.IntegerField()
    only_western_style_rooms = models.IntegerField()
    floor_tiles_with_flooring_style = models.IntegerField()
    garbage_collection_services = models.IntegerField()
    allowed_to_access_to_the_garbage_point_24hours = models.IntegerField()
    garbage_yard = models.IntegerField()
    on_site_waste_yard = models.IntegerField()
    cleaning_box = models.IntegerField()
    coin_laundry = models.IntegerField()
    lift_wall_storage = models.IntegerField()
    shoes_closet = models.IntegerField()
    shoes_cupboads = models.IntegerField()
    ceiling_height_shoe_closet = models.IntegerField()
    pantry = models.IntegerField()
    equipping_cupboard = models.IntegerField()
    number_3ways_kitchen = models.IntegerField(db_column='3ways_kitchen')  # Field renamed because it wasn't a valid Python identifier.
    number_2ways_kitchen = models.IntegerField(db_column='2ways_kitchen')  # Field renamed because it wasn't a valid Python identifier.
    u_shaped_kitchen = models.IntegerField()
    l_shaped_kitchen = models.IntegerField()
    two_rows_style_kitchen = models.IntegerField()
    one_row_stule_kitchen = models.IntegerField()
    independent_kitchen = models.IntegerField()
    four_or_more_burners_on_the_stove = models.IntegerField()
    three_burners_on_the_stove = models.IntegerField()
    two_burners_on_the_stove = models.IntegerField()
    one_burner_on_the_stove = models.IntegerField()
    with_gas_stove = models.IntegerField()
    already_stove_installed = models.IntegerField()
    gas_stove_allowed = models.IntegerField()
    grill = models.IntegerField()
    microwave_oven = models.IntegerField()
    gas_oven = models.IntegerField()
    gas_stove = models.IntegerField()
    two_way_washroom = models.IntegerField()
    three_way_washroom = models.IntegerField()
    toilet_3_places = models.IntegerField()
    toilet_2_places = models.IntegerField()
    high_function_toilet = models.IntegerField()
    washing_stand_deep_style = models.IntegerField()
    large_washing_stand = models.IntegerField()
    washing_stand_with_three_sided_mirror = models.IntegerField()
    washing_stand_with_vertical_lighting = models.IntegerField()
    gym = models.IntegerField()
    exercise_machine_room = models.IntegerField()
    public_bath = models.IntegerField()
    shared_bathroom = models.IntegerField()
    nursery = models.IntegerField()
    childrens_room = models.IntegerField()
    slop_sink = models.IntegerField()
    exclusive_network_line_for_internet = models.IntegerField()
    cable_broadcast = models.IntegerField()
    wireless_lan = models.IntegerField()
    lan = models.IntegerField()
    catv = models.IntegerField()
    bs = models.IntegerField()
    cs = models.IntegerField()
    furnished = models.IntegerField()
    with_dining_table = models.IntegerField()
    set_up_bed = models.IntegerField()
    with_curtain = models.IntegerField()
    all_rooms_with_lighting = models.IntegerField()
    lighting_equipment = models.IntegerField()
    each_room_lighting = models.IntegerField()
    tv_set = models.IntegerField()
    with_home_appliances = models.IntegerField()
    microwave = models.IntegerField()
    refrigerator = models.IntegerField()
    washing_machine = models.IntegerField()
    dishwasher_dryer = models.IntegerField()
    dishwasher = models.IntegerField()
    dish_dryer = models.IntegerField()
    electric_cooker = models.IntegerField()
    electric_stove = models.IntegerField()
    clothes_dryer = models.IntegerField()
    washing_and_drying_machine = models.IntegerField()
    bathroom_dryer = models.IntegerField()
    indoor_laundry_pole = models.IntegerField()
    outdoor_laundry = models.IntegerField()
    indoor_washing_machine_installation_place = models.IntegerField()
    adjacent_japanese_style_room = models.IntegerField()
    japanese_style_adjacent_room = models.IntegerField()
    japanese_style_room = models.IntegerField()
    snow_melting_equipment = models.IntegerField()
    snow_melting_tank = models.IntegerField()
    porte_cochere = models.IntegerField()
    driveway_space = models.IntegerField()
    close_to_the_super_market = models.IntegerField()
    two_elevators = models.IntegerField()
    home_delivery_box = models.IntegerField()
    each_room_secure_access_without_tresspassing = models.IntegerField()
    back_entrance = models.IntegerField()
    parking_for_visitors = models.IntegerField()
    all_rooms_are_equipped_with_storage = models.IntegerField()
    disposer = models.IntegerField()
    water_filter = models.IntegerField()
    tire_yard = models.IntegerField()
    wash_basin_set_on_the_second_floor = models.IntegerField()
    modular_bathroom = models.IntegerField()
    reheating_bath_system = models.IntegerField()
    separate_bathroom = models.IntegerField()
    kitchen_2_places = models.IntegerField()
    double_wash_bowl = models.IntegerField()
    two_toilets = models.IntegerField()
    walk_in_type_shoe_closet = models.IntegerField()
    independent_bathroom_independent_toilet = models.IntegerField()
    home_elevator = models.IntegerField()
    multi_function_shower = models.IntegerField()
    double_door_with_two_different_size = models.IntegerField()
    theater_room = models.IntegerField()
    guest_rooms = models.IntegerField()
    party_room_for_common_use = models.IntegerField()
    rental_meeting_room = models.IntegerField()
    housing_with_office_space = models.IntegerField()
    meeting_room = models.IntegerField()
    on_site_play_ground = models.IntegerField()
    rental_video = models.IntegerField()
    melting_snow_device_for_sideway_road = models.IntegerField()
    outdoor_power_strip = models.IntegerField()
    storage_place_above_the_closet = models.IntegerField()
    wash_room_with_storage = models.IntegerField()
    entrance_storage = models.IntegerField()
    ventilation_good = models.IntegerField()
    ocean_view = models.IntegerField()
    near_the_beach = models.IntegerField()
    riverside = models.IntegerField()
    lake_pond_view = models.IntegerField()
    fireworks_view = models.IntegerField()
    high_rise_property = models.IntegerField()
    top_floor = models.IntegerField()
    upper_floors = models.IntegerField()
    excellent_view = models.IntegerField()
    rich_in_nature_residential_area = models.IntegerField()
    a_quiet_and_peaceful_residential_area = models.IntegerField()
    mountain_view = models.IntegerField()
    scenic_zone = models.IntegerField()
    wire_buried = models.IntegerField()
    low_rise_exclusive_residential_area = models.IntegerField()
    easy_access_to_the_public_park = models.IntegerField()
    on_site_park = models.IntegerField()
    a_region_having_many_educational_institutions = models.IntegerField()
    located_on_a_high_ground = models.IntegerField()
    countryside = models.IntegerField()
    vertically_long_window = models.IntegerField()
    fewer_traffic = models.IntegerField()
    fireplace = models.IntegerField()
    ceiling_fan = models.IntegerField()
    community_open_air_bath = models.IntegerField()
    swimming_pool = models.IntegerField()
    carpeted_floor = models.IntegerField()
    low_table_with_heater_set_on_the_hole = models.IntegerField()
    hearth = models.IntegerField()
    bay_window = models.IntegerField()
    alcove = models.IntegerField()
    tatami_corner = models.IntegerField()
    tearoom = models.IntegerField()
    old_house_style = models.IntegerField()
    log_cabin = models.IntegerField()
    old_city_style_house = models.IntegerField()
    sukiyazukuri = models.IntegerField()
    ryukyu_tatami = models.IntegerField()
    iriomoya_style_roof_top = models.IntegerField()
    shoin_zukuri = models.IntegerField()
    all_rooms_flooring = models.IntegerField()
    building_confirmation_completion_inspected_certificate = models.IntegerField()
    architect_building_inspection_report = models.IntegerField()
    repair_and_inspection_records = models.IntegerField()
    seismic_reinforcement_work_already = models.IntegerField()
    seismic_door = models.IntegerField()
    law_compliance_investigation_report = models.IntegerField()
    wind_resistant_structure = models.IntegerField()
    pre_ground_survey = models.IntegerField()
    uninterruptible_power_system = models.IntegerField()
    mainstay = models.IntegerField()
    yonsunn_12cmx12cm_pillar = models.IntegerField()
    hokkaido_style_housing = models.IntegerField()
    no_falling_snow_building = models.IntegerField()
    double_lock_key = models.IntegerField()
    surveillance_camera = models.IntegerField()
    no_housing_units_on_downstairs = models.IntegerField()
    no_housing_units_on_above = models.IntegerField()
    vinyl_flooring = models.IntegerField()
    human_light_sensor = models.IntegerField()
    seismic_latch_hanging_cupboard = models.IntegerField()
    alcove_1 = models.IntegerField()
    less_barrier_interior_housing = models.IntegerField()
    floor_without_step = models.IntegerField()
    with_elevator_stairs = models.IntegerField()
    entrance_handrail = models.IntegerField()
    foot_lights = models.IntegerField()
    with_aed = models.IntegerField()
    low_rise_apartment = models.IntegerField()
    within_10_minutes_walk_from_hospital = models.IntegerField()
    water_saving_toilet = models.IntegerField()
    energy_saving_measures = models.IntegerField()
    shuttle_bus = models.IntegerField()
    multiple_bus_routes = models.IntegerField()
    i100yen_bus_routes = models.IntegerField()
    along_with_the_streetcar_route = models.IntegerField()
    bicycle_parking = models.IntegerField()
    bike_shelter = models.IntegerField()
    warehouse = models.IntegerField()
    warehouse_1 = models.IntegerField()
    shower_room = models.IntegerField()
    instant_water_heater = models.IntegerField()
    leash_hook = models.IntegerField()
    multiple_common_facilities = models.IntegerField()
    maintained_sidewalk = models.IntegerField()
    dirt_floor = models.IntegerField()
    well = models.IntegerField()
    windbreak_room = models.IntegerField()
    free_catv = models.IntegerField()
    free_internet_access = models.IntegerField()
    picture_rails = models.IntegerField()
    pet_doorway = models.IntegerField()
    one_of_the_developped_property = models.IntegerField()
    office_use_allowed = models.IntegerField()
    pet_toilet = models.IntegerField()
    pets_foot_shower = models.IntegerField()
    powder_room = models.IntegerField()
    golf_course_near_by = models.IntegerField()
    ski_resorts_near_by = models.IntegerField()
    tennis_courts_near_by = models.IntegerField()
    within_10_minutes_walk_from_the_elementary_school = models.IntegerField()
    heating = models.IntegerField()
    wooden_floor = models.IntegerField()
    suited_for_soho = models.IntegerField()
    owners_residence = models.IntegerField()
    small_dogs_accepted = models.IntegerField()
    share_house = models.IntegerField()
    the_first_floor_on_stilts = models.IntegerField()
    three_pr_more_story_above = models.IntegerField()
    single_water_heating_system = models.IntegerField()
    it_jyusetsu_corresponding_property = models.IntegerField()
    two_story = models.IntegerField()
    trunk_room = models.IntegerField()
    cats_allowed = models.IntegerField()
    large_dogs_accepted = models.IntegerField()
    pets_negotiable = models.IntegerField()
    pet_friendly = models.IntegerField()
    pets_not_allowed = models.IntegerField()
    eateries_allowed = models.IntegerField()
    restaurants_not_allowed = models.IntegerField()
    musical_instruments_prohibited = models.IntegerField()
    parttime_building_manager = models.IntegerField()
    land_readjustment_area = models.IntegerField()
    listedn_on_vacant_real_estate_listings = models.IntegerField()
    no_resturuction_of_constructer_builder_selection = models.IntegerField()
    building_restricted_lot = models.IntegerField()
    high_temperature_water_heating_system_bath = models.IntegerField()
    stilts_platform = models.IntegerField()
    spandrel_wall = models.IntegerField()
    reconstruction_prohibited_lot = models.IntegerField()
    office_not_allowed = models.IntegerField()
    landlot_for_apartment_construction = models.IntegerField()
    shaping_land = models.IntegerField()
    gutter = models.IntegerField()
    house_with_store = models.IntegerField()
    staircase = models.IntegerField()
    housing_lot_for_sale = models.IntegerField()
    other_1 = models.CharField(max_length=191, blank=True, null=True)
    other_2 = models.CharField(max_length=191, blank=True, null=True)
    other_3 = models.CharField(max_length=191, blank=True, null=True)
    other_4 = models.CharField(max_length=191, blank=True, null=True)
    other_5 = models.CharField(max_length=191, blank=True, null=True)
    property_details_url = models.TextField(blank=True, null=True)
    request_for_property_information = models.TextField(blank=True, null=True)
    contact_phone_number = models.CharField(max_length=191, blank=True, null=True)
    date_of_registration = models.CharField(max_length=191, blank=True, null=True)
    date_of_renewing_registeration = models.CharField(max_length=191, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'informations'


class LocationScoreReports(models.Model):
    property_no = models.CharField(max_length=191)
    user_type_code = models.IntegerField()
    facility_keys_names = models.TextField()
    facility_key = models.CharField(max_length=191)
    facility_title = models.CharField(max_length=191)
    facility_name = models.CharField(max_length=191)
    distance = models.CharField(max_length=191)
    sentences = models.TextField(blank=True, null=True)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'location_score_reports'


class LocationScores(models.Model):
    common_property_no = models.CharField(max_length=191)
    property_no = models.CharField(max_length=191)
    facility_key = models.CharField(max_length=191, blank=True, null=True)
    facility_attribute_code = models.IntegerField(blank=True, null=True)
    factor_code = models.IntegerField(blank=True, null=True)
    similar_code = models.CharField(max_length=191, blank=True, null=True)
    facility_name = models.CharField(max_length=191, blank=True, null=True)
    facility_title = models.CharField(max_length=191, blank=True, null=True)
    facility_name_for_display = models.CharField(max_length=191, blank=True, null=True)
    facility_point = models.FloatField()
    walking_distance = models.FloatField()
    walking_minutes = models.FloatField()
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'location_scores'


class Migrations(models.Model):
    migration = models.CharField(max_length=191)
    batch = models.IntegerField()

    class Meta:
        managed = False
        db_table = 'migrations'


class SalestalkReports(models.Model):
    common_property_no = models.CharField(max_length=191, blank=True, null=True)
    case_conditions = models.CharField(max_length=191, blank=True, null=True)
    neg_factor = models.CharField(max_length=191, blank=True, null=True)
    sentence_id = models.CharField(max_length=191, blank=True, null=True)
    where_sentenceid = models.CharField(db_column='where_sentenceID', max_length=191, blank=True, null=True)  # Field name made lowercase.
    factor = models.CharField(max_length=191, blank=True, null=True)
    salestalk = models.CharField(max_length=191, blank=True, null=True)
    spec_key = models.CharField(max_length=191, blank=True, null=True)
    similar_code = models.CharField(max_length=191, blank=True, null=True)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'salestalk_reports'


class Saletalks(models.Model):
    property_no = models.CharField(max_length=191)
    case_conditions = models.CharField(max_length=191)
    sentence_id = models.CharField(max_length=191)
    salestalks = models.CharField(max_length=191)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'saletalks'


class Sentences(models.Model):
    common_property_no = models.CharField(max_length=191)
    property_no = models.CharField(max_length=191)
    sentence_id = models.CharField(max_length=191)
    spec_attribute_code = models.IntegerField()
    factor_code = models.IntegerField()
    sentence_content = models.CharField(max_length=191, blank=True, null=True)
    spec_key = models.CharField(max_length=191, blank=True, null=True)
    spec_point = models.FloatField()
    similar_code = models.CharField(max_length=191, blank=True, null=True)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sentences'


class Sessions(models.Model):
    user_id = models.PositiveIntegerField(blank=True, null=True)
    ip_address = models.CharField(max_length=45, blank=True, null=True)
    user_agent = models.TextField(blank=True, null=True)
    payload = models.TextField()
    last_activity = models.IntegerField()
    user_type_code = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sessions'


class SpecScores(models.Model):
    common_property_no = models.CharField(max_length=191)
    property_id = models.CharField(max_length=191)
    spec_key = models.CharField(max_length=191)
    spec_attribute_code = models.CharField(max_length=191)
    factor_code = models.CharField(max_length=191)
    similar_code = models.CharField(max_length=191, blank=True, null=True)
    spec_name = models.CharField(max_length=191)
    spec_name_display = models.CharField(max_length=191)
    spec_point = models.FloatField()

    class Meta:
        managed = False
        db_table = 'spec_scores'


class TalkScripts(models.Model):
    talk_script_id = models.CharField(max_length=191)
    talk_type = models.IntegerField()
    common_property_no = models.CharField(max_length=191)
    property_no = models.CharField(max_length=191)
    talk_script = models.CharField(max_length=191, blank=True, null=True)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)
    attribute_code = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'talk_scripts'


class UserBrowseHistories(models.Model):
    session_id = models.CharField(max_length=191)
    property_no = models.CharField(max_length=191)
    visit_id = models.IntegerField()
    interaction_position = models.IntegerField()
    stay_time = models.IntegerField()
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'user_browse_histories'


class UserValueScores(models.Model):
    common_property_no = models.CharField(max_length=191, blank=True, null=True)
    property_no = models.CharField(max_length=191, blank=True, null=True)
    age = models.FloatField()
    closeness = models.FloatField()
    size = models.FloatField()
    convenient = models.FloatField()
    security = models.FloatField()
    comfortable = models.FloatField()
    session_id = models.CharField(max_length=191)
    created_at = models.DateTimeField(blank=True, null=True)
    updated_at = models.DateTimeField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'user_value_scores'
